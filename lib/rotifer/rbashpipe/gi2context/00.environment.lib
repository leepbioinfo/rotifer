#!/bin/bash

# Basic gi2context environment
function gi2context_set_environment() {
    # Report execution environment
    if [[ $_ != $0 ]]; then
	local caller="${BASH_SOURCE[1]}"
	for ((i=1;i<${#BASH_SOURCE[@]};i++)) {
	    if [ "${FUNCNAME[$i]}" == "source" ]; then
		caller="${BASH_SOURCE[$i]}"
		break
	    fi
	}
	if [ "$caller" != "${RBASHPIPE_MODULE_CURRENT}" ]; then
	    printlog -t SOURCE pipeline: ${RBASHPIPE_PIPELINE_NAME}, module: $(basename ${RBASHPIPE_MODULE_CURRENT}), script: $caller
	fi
    else
	printlog -t EXEC running $(basename $0) as a subshell: $(which $0)
    fi

    # RBASHPIPE_GI2CONTEXT_NAME
    if [ ! -z $1 ]; then
	if [ "$RBASHPIPE_DEBUG_LEVEL" == "DEBUG" ]; then
            printlog -t WARNING "(re)setting gi2context's enviroment (input: $1)"
	fi
	export RBASHPIPE_GI2CONTEXT_NAME=$(basename "$1" .gi)
    elif [ -z "$RBASHPIPE_GI2CONTEXT_NAME" ]; then
	echo "No target file specified!"
	exit 1
    fi

    # RBASHPIPE_OUTPUT_DIR
    if [ -z "${RBASHPIPE_OUTPUT_DIR}" ]; then
	export RBASHPIPE_OUTPUT_DIR="${RBASHPIPE_GI2CONTEXT_NAME}.archs"
    fi

    # Derived variables
    export RBASHPIPE_GI2CONTEXT_LIB="${RBASHPIPE_OUTPUT_DIR}/lib"
    export RBASHPIPE_GI2CONTEXT_LOG="${RBASHPIPE_OUTPUT_DIR}/log"
    export RBASHPIPE_GI2CONTEXT_TMP="${RBASHPIPE_OUTPUT_DIR}/tmp"
    export RBASHPIPE_GI2CONTEXT_DATA="${RBASHPIPE_OUTPUT_DIR}/data/${RBASHPIPE_GI2CONTEXT_NAME}"
    export RBASHPIPE_GI2CONTEXT_FASTA="${RBASHPIPE_OUTPUT_DIR}/data/${RBASHPIPE_GI2CONTEXT_NAME}.fa"
    export RBASHPIPE_GI2CONTEXT_POST="${RBASHPIPE_OUTPUT_DIR}/post/${RBASHPIPE_GI2CONTEXT_NAME}"
    export RBASHPIPE_GI2CONTEXT_SPLIT="${RBASHPIPE_GI2CONTEXT_TMP}/${RBASHPIPE_GI2CONTEXT_NAME}.split"
    export RBASHPIPE_GI2CONTEXT_SPLIT_LIST="${RBASHPIPE_GI2CONTEXT_SPLIT}.txt"
    if [ $(array_contains "${RBASHPIPE_OUTPUT_DIR}/lib" "${RBASHPIPE_PIPELINE_DIR[@]}") == "no" ]; then
	RBASHPIPE_PIPELINE_DIR=("${RBASHPIPE_OUTPUT_DIR}/lib" "${RBASHPIPE_PIPELINE_DIR[@]}")
	export PATH=$(join_array : "${RBASHPIPE_PIPELINE_DIR[@]}")":$PATH"
	rbashpipe_load_library "${RBASHPIPE_OUTPUT_DIR}/lib"
    fi
}
