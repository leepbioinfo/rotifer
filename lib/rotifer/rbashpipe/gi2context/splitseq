#!/bin/bash

#========================================================================
# Help message
#========================================================================
function gi2context_process_fasta_help() {
    echo -n "Usage: rbashpipe [1] -i ${FUNCNAME[0]} [2] [3] [input.fa]
Available options for his module:

  Option     : Description                                          : Default
 ------------:------------------------------------------------------:----------
  -l <int>   : set minimum length allowed length for sequences      : $minseqlen

Note:
You can set options, at the positions indicate between square brackets, for
[1] the rbashpipe system
[2] the gi2context pipeline (guaranteed to work if preceded by '--')
[3] this module  (guaranteed to work if preceded by a second '--')
"
}

#========================================================================
# Command line parser
#========================================================================
#printlog -t DEBUG "OPTIND: $OPTIND : ARGV: $@"
[ -z "${BATCH_SIZE}" ] && BATCH_SIZE=1000
OPTERR=1
while getopts "hs:" opt
do
    case "$opt" in
	s)
	    export BATCH_SIZE="$OPTARG"
	    simplelog INFO "batch size set to ${BATCH_SIZE}"
	    ;;
	h)
	    splitseq_help
	    exit 1
	    ;;
	*)
	    splitseq_help
	    exit 1
	    ;;
    esac
done
unset opt
shift $((OPTIND-1))
OPTIND=0
#printlog -t DEBUG "OPTIND: $OPTIND : ARGV: $@"

#========================================================================
# Gi2context template: make sure a proper environment was set
#========================================================================
[ -z ${RBASHPIPE_GI2CONTEXT_NAME} ] && gi2context_set_environment "$1"

#========================================================================
# Start
#========================================================================
printlog -t START $BATCH_SIZE ${RBASHPIPE_GI2CONTEXT_FASTA} $RBASHPIPE_GI2CONTEXT_SPLIT
if [ ! -d $RBASHPIPE_GI2CONTEXT_TMP ]; then mkdir -p ${RBASHPIPE_GI2CONTEXT_TMP}; fi
seqsplit -s ${BATCH_SIZE} -b .fa -n ${RBASHPIPE_GI2CONTEXT_SPLIT} ${RBASHPIPE_GI2CONTEXT_FASTA}
\ls -1 ${RBASHPIPE_GI2CONTEXT_SPLIT}.*.fa | xargs -n1 -I {} basename {} .fa > ${RBASHPIPE_GI2CONTEXT_SPLIT_LIST}
parallel -N1 makeblastdb -dbtype prot -logfile "${RBASHPIPE_GI2CONTEXT_LOG}/{}.formatdb.log" \
    -in "${RBASHPIPE_GI2CONTEXT_TMP}/{}.fa" < ${RBASHPIPE_GI2CONTEXT_SPLIT_LIST}

#========================================================================
# End
#========================================================================
printlog -t END  $BATCH_SIZE ${RBASHPIPE_GI2CONTEXT_FASTA} $RBASHPIPE_GI2CONTEXT_SPLIT
