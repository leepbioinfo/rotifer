#!/bin/bash

#========================================================================
# Called from detect_sequence_signatures to find TM and signal peptides
#========================================================================
function find_other_signatures_split() {
    local fasta=$1
    [ -z $fasta ] && fasta="${RBASHPIPE_GI2CONTEXT_FASTA}"
    local post="$RBASHPIPE_OUTPUT_DIR/post"
    local srch="$RBASHPIPE_OUTPUT_DIR/srch"
    local bname=$(basename $fasta .fa)
    printlog -t START $fasta

    # tmhmm
    if [ "`which tmhmm`" == "" ]; then
	printlog -t WARNING "No TMHMM executable found! You might miss some transmembrane helices"
    else
	cat $fasta | tmhmm -short | sigtm_parse > ${srch}/TM.${bname}.dbt
	safe_remove TMHMM_[0-9]*
	if [ -s ${srch}/TM.${bname}.dbt ]; then
	    boundtable2table -n TM -e 0.0102 ${srch}/TM.${bname}.dbt \
		| sort -u > ${post}/TM.${bname}.other.table
	else
	    safe_remove ${srch}/TM.${bname}.dbt
	fi
    fi

    # signalp
    local sigpexe=`search_executable signalp2 signalp signalpw`
    case "$sigpexe" in
	*/signalpw)
	    if [ "`which signalp`" == "" ]; then
		printlog -t WARNING "No signalp executable found! You might miss some signal peptide regions!"
	    else
		printlog -t WARNING "using $sigpexe to process $fasta (${bname})"
		cat  $fasta | $sigpexe -t gram- -short | sigtm_parse > ${srch}/SP.${bname}.1.dbt
		cat  $fasta | $sigpexe -t gram+ -short | sigtm_parse > ${srch}/SP.${bname}.2.dbt
	    fi
	    ;;
	*/signalp|*/signalp2)
	    printlog -t WARNING "using $sigpexe to process $fasta (${bname})"
	    $sigpexe -t gram- -short $fasta | sigtm_parse > ${srch}/SP.${bname}.1.dbt
	    $sigpexe -t gram+ -short $fasta | sigtm_parse > ${srch}/SP.${bname}.2.dbt
	    ;;
	*)
	    printlog -t WARNING "Unable to find signalp to process $fasta (${bname})"
	    ;;
    esac
    local sp=${srch}/${bname}.sp.txt
    find $srch -type f -name "SP.${bname}.*.dbt" > $sp
    if [ -s $sp ]; then
	boundtable2table -n SP -e 0.0102 `cat $sp` \
	    | sort -u > ${post}/SP.${bname}.other.table
    fi
    safe_remove $sp

    # Phobius
    if [ "`which phobius`" == "" ]; then
	printlog -t WARNING "No Phobius executable found! You might miss some signal peptide and transmembrane regions!"
    else
	log=$RBASHPIPE_OUTPUT_DIR/log/phobius.log
	phobius $fasta > ${srch}/phobius.${bname}.out 2> $log
	phobius2table -e 0.0101 ${srch}/phobius.${bname}.out > ${post}/phobius.${bname}.other.table 2>> $log
    fi

    printlog -t END $fasta
}

# Export functions: required for parallel
export -f find_other_signatures_split
