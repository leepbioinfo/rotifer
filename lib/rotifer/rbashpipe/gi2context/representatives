#!/bin/bash

#========================================================================
# Help message
#========================================================================
export COVERAGE=0.8
export HEADER="0"
export MAXNEIGH=
export SCORE=95.0
function gi2context_representative_help() {
    echo -n "Usage: rbashpipe [1] -i representatives [2] [3] input.gi
Available options for his module:

  Option     : Description                                          : Default
 ------------:------------------------------------------------------:----------
  -s <int>   : bitscore/length cutoff or percent identity, if > 3.0 : $SCORE
  -l <float> : alignment coverage (%), 0.0 <= coverage <= 1.0       : $COVERAGE

Note:
You can set options, at the positions indicate between square brackets, for
[1] the rbashpipe system
[2] the gi2context pipeline (guaranteed to work if preceded by '--')
[3] this module  (guaranteed to work if preceded by a second '--')
"
}

#========================================================================
# Command line parser
#========================================================================
OPTERR=1
while getopts "s:l:hy" opt
do
    case "$opt" in
	l)
	    export COVERAGE="$OPTARG"
	    simplelog INFO "setting minimum coverage (both sequences) to $COVERAGE"
	    ;;
	n)
	    export MAXNEIGH="$OPTARG"
	    simplelog INFO "choosing representatives from the set defined by at most $MAXNEIGH neighbors"
	    ;;
	s)
	    export SCORE="$OPTARG"
	    simplelog INFO "setting cutoff to $SCORE"
	    ;;
	h)
	    gi2context_representative_help "$RBASHPIPE_HELP_PAGE"
	    exit 1
	    ;;
	y)
	    export HEADER=1
	    ;;
	*)
	    gi2context_representative_help "$RBASHPIPE_HELP_PAGE"
	    exit 1
	    ;;
    esac
done
unset opt
shift $((OPTIND-1))
OPTIND=0

#========================================================================
# Do something!
#========================================================================
[ -z ${RBASHPIPE_GI2CONTEXT_NAME} ] && gi2context_set_environment "$1"

if [ "$HEADER" == "1" ]; then echo ID; fi
if [ "$MAXNEIGH" == "" ]; then
    tfilter -f '$F[0] ne "score" && $F[0] == $ENV{SCORE} && $F[1] == $ENV{COVERAGE}' \
	-f '$F[3]=~s/ /\n/g;1' -i 3 ${RBASHPIPE_GI2CONTEXT_POST}.{1,4}.representatives
else
    echo "MAXNEIGH ot yet supported!" 1>&2
fi

#========================================================================
# Finish!
#========================================================================
unset SCORE COVERAGE list
