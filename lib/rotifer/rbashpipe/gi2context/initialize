#!/bin/bash

#========================================================================
# Parse pipeline options (gi2context template)
#========================================================================
if [ "$RBASHPIPE_DEBUG_LEVEL" == "DEBUG" ]; then printlog -t ARGV -- "$@"; fi

#========================================================================
# Initialize globals
#========================================================================
if [ "$RBASHPIPE_GI2CONTEXT_GETOPTS_PARSED" == "1" ]; then
    [[ $_ != $0 ]] && return 1 # Being sourced: this is ok!
    exit 1 # Running as script: no point
fi

#========================================================================
# Default pipeline settings
#========================================================================
export ANNOTATION="default"
export NEIGHBORS=3
declare -a PROFILE_PATH=(default)
export RUNITERATIVE="off"
export RUNPROFILES="on"
export QSUB=

#========================================================================
# Default pipeline help message
#========================================================================
function gi2context_usage() {
    echo -n "Pipeline to detect domains, build architectures and find operons 
Usage: `basename $0` [global options] [ -p gi2context ] -- [gi2context's options] <input>
 Options accepted by the gi2context pipeline:
----------------:--------------------------------------------:------------------
    option      : description                                : default
----------------:--------------------------------------------:------------------
 -a <directory> : annotation file full path                  : --annotation
 -h             : print default pipeline's help message      : off
 -i             : run __very slow__ iterative searches       : $RUNITERATIVE
 -n <integer>   : number of neighbor genes to analyze        : $NEIGHBORS
 -p <directory> : profile path for user created profiles     : --profile_path
 -q             : use SGE cluster                            : off
 -r             : execute runprofiles searches               : $RUNPROFILES (on or off)
----------------:--------------------------------------------:------------------
--something => default value equal to the default for --something in runprofiles
"
}

#========================================================================
# Parse pipeline options
#========================================================================
OPTERR=0
export RBASHPIPE_GI2CONTEXT_GETOPTS_PARSED=0
while getopts "a:hin:p:qr:" opt
do
    case "$opt" in
	a)
	    export ANNOTATION="$OPTARG"
	    simplelog INFO "loading annotations from $ANNOTATION"
	    ;;

	h)
	    gi2context_usage
	    exit 1
	    ;;

	i)
	    export RUNITERATIVE="yes"
	    simplelog INFO "iterative runprofiles searches $RUNPROFILES! Sequence signatures detection will be much slower!"
	    ;;

	n)
	    export NEIGHBORS="$OPTARG"
	    simplelog INFO "will attempt to retrieve up to $NEIGHBORS neighboring genes!"
	    ;;

	p)
	    export PROFILE_PATH="$OPTARG"
	    simplelog INFO "setting profile_path to $PROFILE_PATH"
	    ;;

	q)
	    export QSUB="--que"
	    simplelog INFO "activating runprofiles --que option!"
	    ;;

	r)
	    export RUNPROFILES="$OPTARG"
	    simplelog INFO "runprofiles routines $RUNPROFILES!"
	    ;;

	*)
	    OPTIND=$((OPTIND-1)) # Make sure this option will be processed by the next getopts call 
	    break
	    ;;
    esac
done
shift $((OPTIND-1))
OPTIND=0
OPTERR=1

#========================================================================
# Complete processing
#========================================================================
export RBASHPIPE_GI2CONTEXT_GETOPTS_PARSED=1
if [ "$*" == "" ]; then gi2context_usage; exit 1; fi
if [ "$RBASHPIPE_DEBUG_LEVEL" == "DEBUG" ]; then printlog -t ARGV -- "$@"; fi
