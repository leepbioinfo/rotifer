#!/bin/bash

#========================================================================
# Run id2neighborhood
#========================================================================
function get_neighborhood() {
    if [ "$NEIGHBORS" == "" ]; then NEIGHBORS=10; fi

    # Restarting?
    if [ -f ${bnout} ]; then
	printlog -t RESTART ${RBASHPIPE_GI2CONTEXT_NAME}
    else
	printlog -t START ${RBASHPIPE_GI2CONTEXT_NAME}
    fi

    # List of GIs (prefer one without PDB and/or eukaryotic entries
    local list
    if [ -s ${RBASHPIPE_GI2CONTEXT_POST}.get_neighbors.live.gi ]; then
	list=${RBASHPIPE_GI2CONTEXT_POST}.get_neighbors.live.gi
    elif [ -s ${RBASHPIPE_GI2CONTEXT_POST}.get_neighbors.gi ]; then
	list=${RBASHPIPE_GI2CONTEXT_POST}.get_neighbors.gi
    else
	list=${RBASHPIPE_GI2CONTEXT_DATA}.gi
    fi
    printlog -t WARNING Selected GI list is $list

    # Settings
    local log=$RBASHPIPE_OUTPUT_DIR/log/id2neighborhood.log
    local bnout=${RBASHPIPE_GI2CONTEXT_DATA}.neighborhood
    local pending=${bnout}.pending
    if [ -f ${bnout} ]; then
	neighborhood_explorer -o query ${bnout} > ${bnout}.found 2>> $log
	fgrep -f ${bnout}.found -v -F -w $list | sort -u > ${pending}
    else
	cat ${list} > ${pending}
	safe_remove $log ${bnout} ${bnout}.found
    fi

    typeset -i try=1 nlast=0
    typeset -i pending_count=`wc -l ${pending} | awk '{print $1}'`
    while [ $pending_count -ne 0 ] && [ $try -le 3 ] && [ $pending_count -ne $nlast ]
    do
	nlast=$pending_count
	id2neighborhood -a $NEIGHBORS -b $NEIGHBORS $pending >> ${bnout} 2>> $log
	neighborhood_explorer -o query ${bnout} > ${bnout}.found 2>> $log
	fgrep -f ${bnout}.found -v -F -w $list | sort -u > ${pending}
	pending_count=`wc -l ${pending} | awk '{print $1}'`
	try=$try+1 # Counter
    done
    if [ $pending_count -eq 0 ]; then
	safe_remove ${bnout}.pending
    fi
    safe_remove ${bnout}.found

    #operon_uniquize ${bnout} > $RBASHPIPE_OUTPUT_DIR/data/${name}.neighborhood.uniquized
    neighborhood_explorer -o ngi ${bnout} | sort -u > ${bnout}.gi
    printlog -t END ${bnout}
}
