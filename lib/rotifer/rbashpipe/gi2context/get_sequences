#!/bin/bash

#========================================================================
# Parameters
#========================================================================
if [ -z "${RBASHPIPE_GI2CONTEXT_NAME}" ]; then
    gi2context_set_environment "$1"
    if [ ! -r ${RBASHPIPE_GI2CONTEXT_DATA}.gi ]; then
	printlog -t ERROR "Cannot load list of GIs from ${RBASHPIPE_GI2CONTEXT_DATA}.gi"
	exit 1
    fi
    shift
fi

#========================================================================
# Start
#========================================================================
gis=${RBASHPIPE_GI2CONTEXT_DATA}.gi
printlog -t START ${gis} "$@"

for format in "$@"
do
    if [ "$format" == "fasta"   ]; then safe_remove ${RBASHPIPE_GI2CONTEXT_FASTA}; fi
    if [ "$format" == "genbank" ]; then safe_remove ${RBASHPIPE_GI2CONTEXT_DATA}.gbk; fi
    list=$gis
    typeset -i missing=$(wc -l $list | awk '{print $1}') try=1 nlast=0
    while [ $missing -ne 0 ] && [ $try -le 3 ] && [ $missing -ne $nlast ]
    do
        nlast=$missing
	if [ "$format" == "fasta" ]; then
	    id2fasta $gis >> ${RBASHPIPE_GI2CONTEXT_FASTA}
	    fasta2id ${RBASHPIPE_GI2CONTEXT_FASTA} | cut -f 1 | sort -u > ${RBASHPIPE_GI2CONTEXT_DATA}.found
	else
	    id2genbank $gis >> ${RBASHPIPE_GI2CONTEXT_DATA}.gbk
	    grep VERSION ${RBASHPIPE_GI2CONTEXT_DATA}.gbk | cut -f 2 -d : | sort -u > ${RBASHPIPE_GI2CONTEXT_DATA}.found
	fi
	fgrep -f ${RBASHPIPE_GI2CONTEXT_DATA}.found -v -F -w $gis | sort -u > ${RBASHPIPE_GI2CONTEXT_DATA}.missing
	missing=$(wc -l ${RBASHPIPE_GI2CONTEXT_DATA}.missing | awk '{print $1}') 
	list=${RBASHPIPE_GI2CONTEXT_DATA}.missing
	try=$try+1 # Counter
    done
    if [ $missing -eq 0 ]; then
	safe_remove ${RBASHPIPE_GI2CONTEXT_DATA}.missing
    fi
    safe_remove ${RBASHPIPE_GI2CONTEXT_DATA}.found
done

#========================================================================
# End
#========================================================================
printlog -t END ${gis}
unset gis format list missing try nlast
