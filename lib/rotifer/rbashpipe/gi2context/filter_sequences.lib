#!/bin/bash

#========================================================================
# Filter sequences by length
#========================================================================
function filter_sequences() {
    function filter_sequences_help() {
	echo "Usage: ${FUNCNAME[1]} [-g <integer>] format1 format2...
Available options:
 -g <integer> : minimum length for filtering sequences
"
}

    # Parse command line
    local minlength=5
    while getopts "g:" opt
    do
        case "$opt" in
            g)
                minlength="$OPTARG"
                ;;
	    *)
		filter_sequences_help
		return 1
		;;
        esac
    done
    shift $((OPTIND-1))

    # Select target
    local fasta=$1
    if [ -z $fasta ]; then fasta=${RBASHPIPE_GI2CONTEXT_FASTA}; fi
    printlog -t START ${fasta} $minlength

    # Filter
    if [ -z $fasta ]; then 
	printlog -t ERROR ${fasta} $minlength
	filter_sequences_help
	return 1
    elif [ -r ${RBASHPIPE_GI2CONTEXT_POST}.length ]; then
	tfilter -i 0 -f '!/^seqid/' -f '$F[1] > '$minlength ${RBASHPIPE_GI2CONTEXT_POST}.length > ${fasta}.gi
	id2fasta -d $fasta ${fasta}.gi > ${fasta}.tmp
    fi

    if [ -s ${fasta}.tmp ]; then
	mv ${fasta}.tmp ${fasta}
    fi

    printlog -t END ${fasta} $minlength
}
