#!/bin/bash

# rbashpipe's control rules
#
# AUTORUN : set to 1 to run this script using the 'all' base module
# ORDER   : set to an integer value to define the order in which the
#           script is auto-executed, i.e. sourced, by the all module
#
#RBASHPIPE_MODULE AUTORUN : 0
#RBASHPIPE_MODULE ORDER   : 0

#========================================================================
# Default module for the default pipeline: simply run all active scripts
#========================================================================
RBASHPIPE_SCRIPT_FOUND=
for RBASHPIPE_SCRIPT_DIR in "${RBASHPIPE_PIPELINE_DIR[@]}"
do
    if [ -d "$RBASHPIPE_SCRIPT_DIR/$RBASHPIPE_PIPELINE_NAME" ]; then
	for RBASHPIPE_SCRIPT_CURRENT in $RBASHPIPE_SCRIPT_DIR/$RBASHPIPE_PIPELINE_NAME/*
	do
	    if [ "$RBASHPIPE_SCRIPT_CURRENT" == "$RBASHPIPE_MODULE_CURRENT" ]; then continue; fi
	    if [[ "$RBASHPIPE_SCRIPT_CURRENT" == *.* ]]; then continue; fi
	    RBASHPIPE_SCRIPT_NAME=`basename $RBASHPIPE_SCRIPT_CURRENT`
	    if [ -s $RBASHPIPE_SCRIPT_CURRENT ] && [ -r $RBASHPIPE_SCRIPT_CURRENT ]; then
		printlog -t START "starting script $RBASHPIPE_SCRIPT_CURRENT"
		source $RBASHPIPE_SCRIPT_CURRENT
		printlog -t END "  script $RBASHPIPE_SCRIPT_CURRENT ended"
		RBASHPIPE_SCRIPT_FOUND="yes"
	    elif [ "${RBASHPIPE_SCRIPT_NAME#\*}" == '.sh' ]; then
		if [ "$RBASHPIPE_DEBUG_LEVEL" == "DEBUG" ]; then
		    printlog -t WARNING "no script matching glob pattern $RBASHPIPE_SCRIPT_CURRENT"
		fi
	    else
		printlog -t WARNING "unable to run $RBASHPIPE_SCRIPT_CURRENT"
	    fi
	done
    fi
done
unset RBASHPIPE_SCRIPT_CURRENT RBASHPIPE_SCRIPT_DIR RBASHPIPE_SCRIPT_NAME

#========================================================================
# Some warnings
#========================================================================
if [ "$RBASHPIPE_SCRIPT_FOUND" == "" ]; then 
    unset RBASHPIPE_SCRIPT_FOUND
    printlog -t WARNING "no components were executed! Are there any scripts?"
    if [ "$RBASHPIPE_DEBUG_LEVEL" == "DEBUG" ] && [ "${RBASHPIPE_PIPELINE_DIR[*]}" != "$RBASHPIPE_LIBRARY_PATH" ]; then
	simpledebug "$@"
    fi
fi
unset RBASHPIPE_SCRIPT_FOUND
