#==============================================================================
# Installation procedure
#==============================================================================

0 - If you have any PREVIOUS version of Rotifer on your system, MAKE SURE TO
    UNINSTALL IT FIRST!!!!! This step depends on how you installed your older
    version. If you used stow, it will be enough to

    cd /usr/local/stow
    stow -D Rotifer

    and

    mv Rotifer Rotifer.old

    or

    rm -fr Rotifer

1 - Install all dependencies (see below) and unpack Rotifer somewhere. In this
    example, I chose /usr/local/stow:

    cd /usr/local/stow
    tar xvzf Rotifer-0.92.tar.gz

2 - You may use a symlink manager like GNU stow to add files in
    /usr/local/rotifer/bin to your shell executable's PATH:

    cd /usr/local/stow
    stow rotifer

    or

    manually add symlinks to the files in /usr/local/stow/rotifer/bin
    to some directory in your path:

    cd /usr/local/bin
    ln -s ../stow/rotifer/bin/* .

    or

    add /usr/local/stow/rotifer/bin to your PATH. For example, for
    bash add the following to your ~/.bashrc file:

    export PATH=$PATH:/usr/local/stow/rotifer/bin

3 - Adjust Rotifers's configuration for your system by editing the file

    rotifer/etc/rotifer/config/environment.yml

    and removing the '#' before and setting the value after

    ROTIFER_DATA:

    to the path to a directory under which you keep your local databases.

    A set of subdirectories (fadb, hmmerdb, profiledb) are expected to reside
    under ROTIFER_DATA by different Rotifer components but symlinks to real
    directories will also work. See to the documentation of each component for
    directory names and contents.

################################ DEPENDENCIES ################################

#=============================================================================
# NCBI C and/or C++ toolkit
#=============================================================================

A complete and functional Rotifer setup requires installatiom of the NCBI
toolkits. Although the C++ toolkit will be the toolkit of choice at some
point, right now the C toolkit is required and C++ is optional.

#=============================================================================
# Other external programs
#=============================================================================

The following external programs are essential for one or more Rotifer 
components to work properly:

- rsync (http://rsync.samba.org/)

#=============================================================================
# Bioperl
#=============================================================================

Some Rotifer components are built on top of bioperl. You will find detailed
instructions on how to install Bioperl at http://www.bioperl.org but we 
recommend installing from CPAN or the project's source file since these are
the ones we use for development.

#=============================================================================
# Other Perl modules
#=============================================================================

In addition to Bioperl, the following CPAN libraries are required:

AppConfig
Bio::DB::EUtilities
Bio::Phylo
Carp::Clan
Config::Any
Data::UUID
Data::Table
DateTime
DBIx::Class
DBIx::Class::Candy
DBIx::Class::Helper::ResultSet::SetOperations
DBIx::Class::Schema::Loader
File::Which
IO::String
IPC::Run
List::MoreUtils
Module::Load
Moose
MooseX::AbstractFactory
MooseX::NonMoose
SQL::Translator
Statistics::Descriptive
YAML::XS
