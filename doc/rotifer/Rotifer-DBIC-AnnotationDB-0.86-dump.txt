
##### connect #####
0


##### dsn #####
""


##### ENV #####
{
  _ => "/usr/local/bin/dbicx-autodoc",
  __CF_USER_TEXT_ENCODING => "0x1FA:0:0",
  Apple_PubSub_Socket_Render => "/tmp/launch-XLw4JX/Render",
  Apple_Ubiquity_Message => "/tmp/launch-kQhW7K/Apple_Ubiquity_Message",
  BIOPERL_INDEX => "/Users/rfsouza/projects/databases/data/indexes",
  BLASTDB => "/Users/rfsouza/projects/databases/data/blast",
  COLORFGBG => "7;0",
  COMMAND_MODE => "unix2003",
  DISPLAY => "/tmp/launch-EpF4ts/org.macosforge.xquartz:0",
  DYLD_LIBRARY_PATH => "/usr/local/mysql/lib",
  HMMERDB => "/Users/rfsouza/projects/databases/data/pfam",
  HOME => "/Users/rfsouza",
  ITERM_PROFILE => "Default",
  ITERM_SESSION_ID => "w0t4p0",
  LANG => "en_US.UTF-8",
  LOGNAME => "rfsouza",
  OLDPWD => "/Users/rfsouza/projects/mytools/dvlp/rotifer/perl",
  PATH => "/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/opt/local/bin:/opt/local/sbin:/usr/local/mysql/bin:/Users/rfsouza/.rotifer/bin",
  PROJECTS => "/Users/rfsouza/projects",
  PWD => "/Users/rfsouza/projects/mytools/dvlp/rotifer",
  ROTIFER_DATA => "/usr/local/data",
  ROTIFER_ROOT => "/usr/local",
  SHELL => "/bin/bash",
  SHLVL => 1,
  SSH_AUTH_SOCK => "/tmp/launch-rTyEfp/Listeners",
  TASS_DATA => "/Users/rfsouza/projects/databases/data/tass",
  TASS_ROOT => "/usr/local/stow/tass",
  TERM => "xterm-256color",
  TERM_PROGRAM => "iTerm.app",
  TMPDIR => "/var/folders/24/2dvks84d6jd1b8xdqzy3sjnh0000gt/T/",
  USER => "rfsouza",
  VERSIONER_PERL_PREFER_32_BIT => "no",
  VERSIONER_PERL_VERSION => 5.12,
}


##### filename_base #####
"Rotifer-DBIC-AnnotationDB-0.86"


##### generated #####
"Mon Jun 17 13:33:12 2013"


##### graphviz_command #####
["fdp"]


##### inheritance #####
{
  "Bio::AnnotatableI"                                                         => ["Bio::Root::RootI"],
  "Bio::FeatureHolderI"                                                       => ["Bio::Root::RootI"],
  "Bio::PrimarySeqI"                                                          => ["Bio::Root::RootI"],
  "Bio::Root::Root"                                                           => ["Bio::Root::RootI"],
  "Bio::Root::RootI"                                                          => [],
  "Bio::SeqI"                                                                 => ["Bio::PrimarySeqI", "Bio::AnnotatableI", "Bio::FeatureHolderI"],
  "Class::Accessor::Grouped"                                                  => [],
  "Class::C3::Componentised"                                                  => [],
  "DBICx::AutoDoc::Magic"                                                     => ["DBIx::Class"],
  "DBIx::Class"                                                               => ["DBIx::Class::Componentised", "DBIx::Class::AccessorGroup"],
  "DBIx::Class::AccessorGroup"                                                => ["Class::Accessor::Grouped"],
  "DBIx::Class::Componentised"                                                => ["Class::C3::Componentised"],
  "DBIx::Class::Core"                                                         => [
                                                                                   "DBIx::Class::Relationship",
                                                                                   "DBIx::Class::InflateColumn",
                                                                                   "DBIx::Class::PK::Auto",
                                                                                   "DBIx::Class::PK",
                                                                                   "DBIx::Class::Row",
                                                                                   "DBIx::Class::ResultSourceProxy::Table",
                                                                                   "DBIx::Class",
                                                                                 ],
  "DBIx::Class::Helper::ResultSet::SetOperations"                             => [],
  "DBIx::Class::InflateColumn"                                                => ["DBIx::Class::Row"],
  "DBIx::Class::InflateColumn::DateTime"                                      => ["DBIx::Class::InflateColumn", "DBIx::Class"],
  "DBIx::Class::PK"                                                           => ["DBIx::Class::Row"],
  "DBIx::Class::PK::Auto"                                                     => ["DBIx::Class"],
  "DBIx::Class::Relationship"                                                 => [
                                                                                   "DBIx::Class::Relationship::Helpers",
                                                                                   "DBIx::Class::Relationship::Accessor",
                                                                                   "DBIx::Class::Relationship::CascadeActions",
                                                                                   "DBIx::Class::Relationship::ProxyMethods",
                                                                                   "DBIx::Class::Relationship::Base",
                                                                                   "DBIx::Class",
                                                                                 ],
  "DBIx::Class::Relationship::Accessor"                                       => [],
  "DBIx::Class::Relationship::Base"                                           => ["DBIx::Class"],
  "DBIx::Class::Relationship::BelongsTo"                                      => [],
  "DBIx::Class::Relationship::CascadeActions"                                 => [],
  "DBIx::Class::Relationship::HasMany"                                        => [],
  "DBIx::Class::Relationship::HasOne"                                         => [],
  "DBIx::Class::Relationship::Helpers"                                        => [
                                                                                   "DBICx::AutoDoc::Magic",
                                                                                   "DBIx::Class::Relationship::HasMany",
                                                                                   "DBIx::Class::Relationship::HasOne",
                                                                                   "DBIx::Class::Relationship::BelongsTo",
                                                                                   "DBIx::Class::Relationship::ManyToMany",
                                                                                   "DBIx::Class",
                                                                                 ],
  "DBIx::Class::Relationship::ManyToMany"                                     => [],
  "DBIx::Class::Relationship::ProxyMethods"                                   => ["DBIx::Class"],
  "DBIx::Class::ResultSourceProxy"                                            => ["DBIx::Class"],
  "DBIx::Class::ResultSourceProxy::Table"                                     => ["DBIx::Class::ResultSourceProxy"],
  "DBIx::Class::Row"                                                          => ["DBIx::Class"],
  "Moose::Object"                                                             => [],
  "Rotifer::DBIC::AnnotationDB::Component::Annotatable"                       => ["DBIx::Class"],
  "Rotifer::DBIC::AnnotationDB::Component::BiodataComponent"                  => [
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::WithDataset",
                                                                                   "DBIx::Class",
                                                                                   "Moose::Object",
                                                                                   "Bio::SeqI",
                                                                                   "Bio::Root::Root",
                                                                                 ],
  "Rotifer::DBIC::AnnotationDB::Component::BiodataRelationshipComponent"      => [
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::WithDataset",
                                                                                   "DBIx::Class",
                                                                                 ],
  "Rotifer::DBIC::AnnotationDB::Component::BiosequenceComponent"              => [
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::WithDataset",
                                                                                   "DBIx::Class",
                                                                                   "Moose::Object",
                                                                                   "Bio::PrimarySeqI",
                                                                                   "Bio::Root::Root",
                                                                                 ],
  "Rotifer::DBIC::AnnotationDB::Component::DatasetComponent"                  => ["DBIx::Class"],
  "Rotifer::DBIC::AnnotationDB::Component::DynamicSubclassByTerm"             => ["DBIx::Class"],
  "Rotifer::DBIC::AnnotationDB::Component::WithDataset"                       => ["DBIx::Class"],
  "Rotifer::DBIC::AnnotationDB::Result::Biodata"                              => [
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::DynamicSubclassByTerm",
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::BiodataComponent",
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::Annotatable",
                                                                                   "DBIx::Class::Helper::ResultSet::SetOperations",
                                                                                   "DBIx::Class::InflateColumn::DateTime",
                                                                                   "DBIx::Class::Core",
                                                                                   "Moose::Object",
                                                                                 ],
  "Rotifer::DBIC::AnnotationDB::Result::Biodata::protein_domain_architecture" => ["Rotifer::DBIC::AnnotationDB::Result::Biodata"],
  "Rotifer::DBIC::AnnotationDB::Result::Biodata::reference"                   => ["Rotifer::DBIC::AnnotationDB::Result::Biodata"],
  "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue"                => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset"                       => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref"                        => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship"                  => [
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::BiodataRelationshipComponent",
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::Annotatable",
                                                                                   "DBIx::Class::Helper::ResultSet::SetOperations",
                                                                                   "DBIx::Class::Core",
                                                                                   "Moose::Object",
                                                                                 ],
  "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipAttributeValue"    => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipDataset"           => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::Biosequence"                          => [
                                                                                   "DBIx::Class::Helper::ResultSet::SetOperations",
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::BiosequenceComponent",
                                                                                   "DBIx::Class::Core",
                                                                                   "Moose::Object",
                                                                                 ],
  "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDataset"                   => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDbxref"                    => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::Dataset"                              => [
                                                                                   "DBIx::Class::Helper::ResultSet::SetOperations",
                                                                                   "DBIx::Class::InflateColumn::DateTime",
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::DatasetComponent",
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::Annotatable",
                                                                                   "DBIx::Class::Core",
                                                                                   "Moose::Object",
                                                                                 ],
  "Rotifer::DBIC::AnnotationDB::Result::DatasetAttributeValue"                => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::DatasetRelationship"                  => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::Dbxref"                               => [
                                                                                   "DBIx::Class::Helper::ResultSet::SetOperations",
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::WithDataset",
                                                                                   "DBIx::Class::Core",
                                                                                   "Moose::Object",
                                                                                 ],
  "Rotifer::DBIC::AnnotationDB::Result::DbxrefDataset"                        => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::DbxrefQualifierValue"                 => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::Ontology"                             => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::Organism"                             => [
                                                                                   "DBIx::Class::Helper::ResultSet::SetOperations",
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::Annotatable",
                                                                                   "Rotifer::DBIC::AnnotationDB::Component::WithDataset",
                                                                                   "DBIx::Class::Core",
                                                                                   "Moose::Object",
                                                                                 ],
  "Rotifer::DBIC::AnnotationDB::Result::OrganismAttributeValue"               => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::OrganismDataset"                      => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::OrganismDbxref"                       => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::Term"                                 => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::TermDbxref"                           => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::TermPath"                             => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::TermRelationship"                     => ["DBIx::Class::Core", "Moose::Object"],
  "Rotifer::DBIC::AnnotationDB::Result::TermSynonym"                          => ["DBIx::Class::Core", "Moose::Object"],
}


##### output #####
"/Users/rfsouza/projects/mytools/dvlp/rotifer/doc/rotifer/"


##### relationship_map #####
[
  {
    accessor => "many_to_many",
    foreign_rel_name => "dataset",
    link_rel_name => "biodata_datasets",
    name => "datasets",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "object_id", self => "biodata_id" }],
    foreign  => "BiodataRelationship",
    name     => "biodata_relationship_objects",
    self     => "Biodata",
    type     => "has_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "dbxref",
    link_rel_name => "biodata_dbxrefs",
    name => "dbxrefs",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "subject_id", self => "biodata_id" }],
    foreign  => "BiodataRelationship",
    name     => "biodata_relationship_subjects",
    self     => "Biodata",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "BiodataDataset",
    name     => "biodata_datasets",
    self     => "Biodata",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "Biodata",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "BiodataDbxref",
    name     => "biodata_dbxrefs",
    self     => "Biodata",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biosequence_id", self => "biosequence_id" }],
    foreign  => "Biosequence",
    name     => "biosequence",
    self     => "Biodata",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "BiodataAttributeValue",
    name     => "biodata_attribute_values",
    self     => "Biodata",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "organism_id", self => "organism_id" }],
    foreign  => "Organism",
    name     => "organism",
    self     => "Biodata",
    type     => "belongs_to",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "dataset",
    link_rel_name => "biodata_datasets",
    name => "datasets",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "object_id", self => "biodata_id" }],
    foreign  => "BiodataRelationship",
    name     => "biodata_relationship_objects",
    self     => "Biodata::protein_domain_architecture",
    type     => "has_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "dbxref",
    link_rel_name => "biodata_dbxrefs",
    name => "dbxrefs",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "subject_id", self => "biodata_id" }],
    foreign  => "BiodataRelationship",
    name     => "biodata_relationship_subjects",
    self     => "Biodata::protein_domain_architecture",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "BiodataDataset",
    name     => "biodata_datasets",
    self     => "Biodata::protein_domain_architecture",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "Biodata::protein_domain_architecture",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biosequence_id", self => "biosequence_id" }],
    foreign  => "Biosequence",
    name     => "biosequence",
    self     => "Biodata::protein_domain_architecture",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "BiodataDbxref",
    name     => "biodata_dbxrefs",
    self     => "Biodata::protein_domain_architecture",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "BiodataAttributeValue",
    name     => "biodata_attribute_values",
    self     => "Biodata::protein_domain_architecture",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "organism_id", self => "organism_id" }],
    foreign  => "Organism",
    name     => "organism",
    self     => "Biodata::protein_domain_architecture",
    type     => "belongs_to",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "dataset",
    link_rel_name => "biodata_datasets",
    name => "datasets",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "object_id", self => "biodata_id" }],
    foreign  => "BiodataRelationship",
    name     => "biodata_relationship_objects",
    self     => "Biodata::reference",
    type     => "has_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "dbxref",
    link_rel_name => "biodata_dbxrefs",
    name => "dbxrefs",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "subject_id", self => "biodata_id" }],
    foreign  => "BiodataRelationship",
    name     => "biodata_relationship_subjects",
    self     => "Biodata::reference",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "BiodataDataset",
    name     => "biodata_datasets",
    self     => "Biodata::reference",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "Biodata::reference",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biosequence_id", self => "biosequence_id" }],
    foreign  => "Biosequence",
    name     => "biosequence",
    self     => "Biodata::reference",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "BiodataDbxref",
    name     => "biodata_dbxrefs",
    self     => "Biodata::reference",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "BiodataAttributeValue",
    name     => "biodata_attribute_values",
    self     => "Biodata::reference",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "organism_id", self => "organism_id" }],
    foreign  => "Organism",
    name     => "organism",
    self     => "Biodata::reference",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "Biodata",
    name     => "biodata",
    self     => "BiodataAttributeValue",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "BiodataAttributeValue",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "Dataset",
    name     => "dataset",
    self     => "BiodataDataset",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "Biodata",
    name     => "biodata",
    self     => "BiodataDataset",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "biodata_id" }],
    foreign  => "Biodata",
    name     => "biodata",
    self     => "BiodataDbxref",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "Dbxref",
    name     => "dbxref",
    self     => "BiodataDbxref",
    type     => "belongs_to",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "dataset",
    link_rel_name => "biodata_relationship_datasets",
    name => "datasets",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "object_id" }],
    foreign  => "Biodata",
    name     => "object",
    self     => "BiodataRelationship",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biodata_id", self => "subject_id" }],
    foreign  => "Biodata",
    name     => "subject",
    self     => "BiodataRelationship",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [
                  {
                    foreign => "biodata_relationship_id",
                    self => "biodata_relationship_id",
                  },
                ],
    foreign  => "BiodataRelationshipDataset",
    name     => "biodata_relationship_datasets",
    self     => "BiodataRelationship",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "predicate_id" }],
    foreign  => "Term",
    name     => "predicate",
    self     => "BiodataRelationship",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [
                  {
                    foreign => "biodata_relationship_id",
                    self => "biodata_relationship_id",
                  },
                ],
    foreign  => "BiodataRelationshipAttributeValue",
    name     => "biodata_relationship_attribute_values",
    self     => "BiodataRelationship",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "BiodataRelationshipAttributeValue",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [
                  {
                    foreign => "biodata_relationship_id",
                    self => "biodata_relationship_id",
                  },
                ],
    foreign  => "BiodataRelationship",
    name     => "biodata_relationship",
    self     => "BiodataRelationshipAttributeValue",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "Dataset",
    name     => "dataset",
    self     => "BiodataRelationshipDataset",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [
                  {
                    foreign => "biodata_relationship_id",
                    self => "biodata_relationship_id",
                  },
                ],
    foreign  => "BiodataRelationship",
    name     => "biodata_relationship",
    self     => "BiodataRelationshipDataset",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biosequence_id", self => "biosequence_id" }],
    foreign  => "BiosequenceDataset",
    name     => "biosequence_datasets",
    self     => "Biosequence",
    type     => "has_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "dataset",
    link_rel_name => "biosequence_datasets",
    name => "datasets",
    type => "many_to_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "dbxref",
    link_rel_name => "biosequence_dbxrefs",
    name => "dbxrefs",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "Biosequence",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biosequence_id", self => "biosequence_id" }],
    foreign  => "BiosequenceDbxref",
    name     => "biosequence_dbxrefs",
    self     => "Biosequence",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biosequence_id", self => "biosequence_id" }],
    foreign  => "Biodata",
    name     => "biodatas",
    self     => "Biosequence",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "Dataset",
    name     => "dataset",
    self     => "BiosequenceDataset",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biosequence_id", self => "biosequence_id" }],
    foreign  => "Biosequence",
    name     => "biosequence",
    self     => "BiosequenceDataset",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "Dbxref",
    name     => "dbxref",
    self     => "BiosequenceDbxref",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "biosequence_id", self => "biosequence_id" }],
    foreign  => "Biosequence",
    name     => "biosequence",
    self     => "BiosequenceDbxref",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "BiosequenceDataset",
    name     => "biosequence_datasets",
    self     => "Dataset",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "subject_id", self => "dataset_id" }],
    foreign  => "DatasetRelationship",
    name     => "dataset_relationship_subjects",
    self     => "Dataset",
    type     => "has_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "biodata_relationship",
    link_rel_name => "biodata_relationship_datasets",
    name => "biodata_relationships",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "BiodataRelationshipDataset",
    name     => "biodata_relationship_datasets",
    self     => "Dataset",
    type     => "has_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "dbxref",
    link_rel_name => "dbxref_datasets",
    name => "dbxrefs",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "object_id", self => "dataset_id" }],
    foreign  => "DatasetRelationship",
    name     => "dataset_relationship_objects",
    self     => "Dataset",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "DatasetAttributeValue",
    name     => "dataset_attribute_values",
    self     => "Dataset",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "BiodataDataset",
    name     => "biodata_datasets",
    self     => "Dataset",
    type     => "has_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "biodata",
    link_rel_name => "biodata_datasets",
    name => "biodatas",
    type => "many_to_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "biosequence",
    link_rel_name => "biosequence_datasets",
    name => "biosequences",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "OrganismDataset",
    name     => "organism_datasets",
    self     => "Dataset",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "DbxrefDataset",
    name     => "dbxref_datasets",
    self     => "Dataset",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "Dataset",
    name     => "dataset",
    self     => "DatasetAttributeValue",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "DatasetAttributeValue",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "object_id" }],
    foreign  => "Dataset",
    name     => "object",
    self     => "DatasetRelationship",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "subject_id" }],
    foreign  => "Dataset",
    name     => "subject",
    self     => "DatasetRelationship",
    type     => "belongs_to",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "dataset",
    link_rel_name => "dbxref_datasets",
    name => "datasets",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "OrganismDbxref",
    name     => "organism_dbxrefs",
    self     => "Dbxref",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "DbxrefQualifierValue",
    name     => "dbxref_qualifier_values",
    self     => "Dbxref",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "BiodataDbxref",
    name     => "biodata_dbxrefs",
    self     => "Dbxref",
    type     => "has_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "biodata",
    link_rel_name => "biodata_dbxrefs",
    name => "biodatas",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "BiosequenceDbxref",
    name     => "biosequence_dbxrefs",
    self     => "Dbxref",
    type     => "has_many",
  },
  {
    accessor => "many_to_many",
    foreign_rel_name => "biosequence",
    link_rel_name => "biosequence_dbxrefs",
    name => "biosequences",
    type => "many_to_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "TermDbxref",
    name     => "term_dbxrefs",
    self     => "Dbxref",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "DbxrefDataset",
    name     => "dbxref_datasets",
    self     => "Dbxref",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "Dataset",
    name     => "dataset",
    self     => "DbxrefDataset",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "Dbxref",
    name     => "dbxref",
    self     => "DbxrefDataset",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "DbxrefQualifierValue",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "Dbxref",
    name     => "dbxref",
    self     => "DbxrefQualifierValue",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "ontology_id", self => "ontology_id" }],
    foreign  => "Term",
    name     => "terms",
    self     => "Ontology",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "ontology_id", self => "ontology_id" }],
    foreign  => "TermRelationship",
    name     => "term_relationships",
    self     => "Ontology",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "ontology_id", self => "ontology_id" }],
    foreign  => "TermPath",
    name     => "term_paths",
    self     => "Ontology",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "organism_id", self => "organism_id" }],
    foreign  => "OrganismAttributeValue",
    name     => "organism_attribute_values",
    self     => "Organism",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "organism_id", self => "organism_id" }],
    foreign  => "OrganismDbxref",
    name     => "organism_dbxrefs",
    self     => "Organism",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "organism_id", self => "organism_id" }],
    foreign  => "Biodata",
    name     => "biodatas",
    self     => "Organism",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "organism_id", self => "organism_id" }],
    foreign  => "OrganismDataset",
    name     => "organism_datasets",
    self     => "Organism",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "OrganismAttributeValue",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "organism_id", self => "organism_id" }],
    foreign  => "Organism",
    name     => "organism",
    self     => "OrganismAttributeValue",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dataset_id", self => "dataset_id" }],
    foreign  => "Dataset",
    name     => "dataset",
    self     => "OrganismDataset",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "organism_id", self => "organism_id" }],
    foreign  => "Organism",
    name     => "organism",
    self     => "OrganismDataset",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "Dbxref",
    name     => "dbxref",
    self     => "OrganismDbxref",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "organism_id", self => "organism_id" }],
    foreign  => "Organism",
    name     => "organism",
    self     => "OrganismDbxref",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "DatasetAttributeValue",
    name     => "dataset_attribute_values",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "ontology_id", self => "ontology_id" }],
    foreign  => "Ontology",
    name     => "ontology",
    self     => "Term",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "BiodataRelationshipAttributeValue",
    name     => "biodata_relationship_attribute_values",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "BiodataAttributeValue",
    name     => "biodata_attribute_values",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "predicate_term_id", self => "term_id" }],
    foreign  => "TermRelationship",
    name     => "term_relationship_predicate_terms",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "TermDbxref",
    name     => "term_dbxrefs",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "OrganismAttributeValue",
    name     => "organism_attribute_values",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "subject_term_id", self => "term_id" }],
    foreign  => "TermRelationship",
    name     => "term_relationship_subject_terms",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "object_term_id", self => "term_id" }],
    foreign  => "TermRelationship",
    name     => "term_relationship_object_terms",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "predicate_id", self => "term_id" }],
    foreign  => "BiodataRelationship",
    name     => "biodata_relationships",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "DbxrefQualifierValue",
    name     => "dbxref_qualifier_values",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "object_term_id", self => "term_id" }],
    foreign  => "TermPath",
    name     => "term_path_object_terms",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "TermSynonym",
    name     => "term_synonyms",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Biodata",
    name     => "biodatas",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "subject_term_id", self => "term_id" }],
    foreign  => "TermPath",
    name     => "term_path_subject_terms",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "predicate_term_id", self => "term_id" }],
    foreign  => "TermPath",
    name     => "term_path_predicate_terms",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Biosequence",
    name     => "biosequences",
    self     => "Term",
    type     => "has_many",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "TermDbxref",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "dbxref_id", self => "dbxref_id" }],
    foreign  => "Dbxref",
    name     => "dbxref",
    self     => "TermDbxref",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "predicate_term_id" }],
    foreign  => "Term",
    name     => "predicate_term",
    self     => "TermPath",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "object_term_id" }],
    foreign  => "Term",
    name     => "object_term",
    self     => "TermPath",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "subject_term_id" }],
    foreign  => "Term",
    name     => "subject_term",
    self     => "TermPath",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "ontology_id", self => "ontology_id" }],
    foreign  => "Ontology",
    name     => "ontology",
    self     => "TermPath",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "predicate_term_id" }],
    foreign  => "Term",
    name     => "predicate_term",
    self     => "TermRelationship",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "object_term_id" }],
    foreign  => "Term",
    name     => "object_term",
    self     => "TermRelationship",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "subject_term_id" }],
    foreign  => "Term",
    name     => "subject_term",
    self     => "TermRelationship",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "ontology_id", self => "ontology_id" }],
    foreign  => "Ontology",
    name     => "ontology",
    self     => "TermRelationship",
    type     => "belongs_to",
  },
  {
    accessor => undef,
    cond     => [{ foreign => "term_id", self => "term_id" }],
    foreign  => "Term",
    name     => "term",
    self     => "TermSynonym",
    type     => "belongs_to",
  },
]


##### schema #####
"Rotifer::DBIC::AnnotationDB"


##### schema_class #####
"Rotifer::DBIC::AnnotationDB"


##### schema_version #####
0.86


##### software_versions #####
{
  "DBICx::AutoDoc"        => 0.08,
  "DBICx::AutoDoc::Magic" => 0.08,
  "DBIx::Class"           => 0.08203,
  "Template"              => 2.24,
}


##### sources #####
do {
  my $a = [
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
      columns => [
        {
          data_type => "integer",
          is_auto_increment => 1,
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "biodata_id",
          unique_constraints => ["primary", "primary", "primary"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "term_id",
          unique_constraints => ["biodata_uniq", "biodata_uniq", "biodata_uniq"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 1,
          name => "organism_id",
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 1,
          name => "biosequence_id",
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 0,
          name => "identifier",
          size => 255,
          unique_constraints => ["biodata_uniq", "biodata_uniq", "biodata_uniq"],
        },
        {
          data_type => "smallint",
          default_value => "'''0'''",
          is_inflated => 0,
          is_nullable => 0,
          name => "rank",
          unique_constraints => ["biodata_uniq", "biodata_uniq", "biodata_uniq"],
        },
        {
          data_type => "tinyint",
          default_value => "'''0'''",
          is_inflated => 0,
          is_nullable => 0,
          name => "is_rawsequence",
        },
        {
          data_type => "tinyint",
          default_value => "'''0'''",
          is_inflated => 0,
          is_nullable => 0,
          name => "is_obsolete",
        },
        {
          data_type => "text",
          is_inflated => 0,
          is_nullable => 1,
          name => "description",
        },
        {
          _ic_dt_method => "timestamp",
          data_type => "timestamp",
          datetime_undef_if_invalid => 1,
          default_value => "''current_timestamp''",
          is_inflated => 0,
          is_nullable => 0,
          name => "lastmodified",
        },
      ],
      moniker => "Biodata",
      primary_columns => ["biodata_id"],
      relationships => [
        {
          attributes => undef,
          foreign_rel_name => "dataset",
          link_rel_name => "biodata_datasets",
          name => "datasets",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          cond => { "foreign.object_id" => "self.biodata_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship_objects",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          type => "has_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "dbxref",
          link_rel_name => "biodata_dbxrefs",
          name => "dbxrefs",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          cond => { "foreign.subject_id" => "self.biodata_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship_subjects",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          cond => { "foreign.biodata_id" => "self.biodata_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          type => "has_many",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "NO ACTION",
            on_update => "NO ACTION",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "NO ACTION",
            on_update                 => "NO ACTION",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => { term_id => "term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          cond => { "foreign.biodata_id" => "self.biodata_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_dbxrefs",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          type => "has_many",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            join_type => "LEFT",
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { biosequence_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            join_type                 => "LEFT",
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          cond => { "foreign.biosequence_id" => "self.biosequence_id" },
          condition => { biosequence_id => "biosequence_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          foreign_moniker => undef,
          moniker => undef,
          name => "biosequence",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          cond => { "foreign.biodata_id" => "self.biodata_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_attribute_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            join_type => "LEFT",
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { organism_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            join_type                 => "LEFT",
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          cond => { "foreign.organism_id" => "self.organism_id" },
          condition => { organism_id => "organism_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism",
          source => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
      resultset_class => "Rotifer::DBIC::AnnotationDB::ResultSet::Biodata",
      simple_moniker => "Biodata",
      table => "biodata",
      unique_constraints => [
        { columns => ["biodata_id"], name => "primary" },
        {
          columns => ["term_id", "identifier", "rank"],
          name => "biodata_uniq",
        },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::Biodata::protein_domain_architecture",
      columns => ['fix', 'fix', 'fix', 'fix', 'fix', 'fix', 'fix', 'fix', 'fix', 'fix'],
      moniker => "Biodata::protein_domain_architecture",
      primary_columns => ["biodata_id"],
      relationships => [
        {
          attributes => undef,
          foreign_rel_name => "dataset",
          link_rel_name => "biodata_datasets",
          name => "datasets",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship_objects",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          type => "has_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "dbxref",
          link_rel_name => "biodata_dbxrefs",
          name => "dbxrefs",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship_subjects",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          type => "has_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          type => "has_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          foreign_moniker => undef,
          moniker => undef,
          name => "biosequence",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_dbxrefs",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          type => "has_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_attribute_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism",
          source => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata::protein_domain_architecture",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "Biodata_protein_domain_architecture",
      table => "biodata",
      unique_constraints => [
        { columns => 'fix', name => "primary" },
        { columns => 'fix', name => "biodata_uniq" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::Biodata::reference",
      columns => ['fix', 'fix', 'fix', 'fix', 'fix', 'fix', 'fix', 'fix', 'fix', 'fix'],
      moniker => "Biodata::reference",
      primary_columns => ["biodata_id"],
      relationships => [
        {
          attributes => undef,
          foreign_rel_name => "dataset",
          link_rel_name => "biodata_datasets",
          name => "datasets",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship_objects",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          type => "has_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "dbxref",
          link_rel_name => "biodata_dbxrefs",
          name => "dbxrefs",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship_subjects",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          type => "has_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          type => "has_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          foreign_moniker => undef,
          moniker => undef,
          name => "biosequence",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_dbxrefs",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          type => "has_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_attribute_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => 'fix',
          attrs => 'fix',
          class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          cond => 'fix',
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism",
          source => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata::reference",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "Biodata_reference",
      table => "biodata",
      unique_constraints => [
        { columns => 'fix', name => "primary" },
        { columns => 'fix', name => "biodata_uniq" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "biodata_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "term_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          default_value      => "'0'",
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "rank",
          unique_constraints => ["primary"],
        },
        { data_type => "text", is_inflated => 0, is_nullable => 1, name => "value" },
      ],
      moniker => "BiodataAttributeValue",
      primary_columns => ["biodata_id", "term_id", "rank"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { biodata_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          cond => { "foreign.biodata_id" => "self.biodata_id" },
          condition => { biodata_id => "biodata_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => { term_id => "term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "BiodataAttributeValue",
      table => "biodata_attribute_value",
      unique_constraints => [
        { columns => ["biodata_id", "term_id", "rank"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "dataset_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "biodata_id",
          unique_constraints => ["primary"],
        },
      ],
      moniker => "BiodataDataset",
      primary_columns => ["biodata_id", "dataset_id"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dataset_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => { dataset_id => "dataset_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "dataset",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { biodata_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          cond => { "foreign.biodata_id" => "self.biodata_id" },
          condition => { biodata_id => "biodata_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "BiodataDataset",
      table => "biodata_dataset",
      unique_constraints => [
        { columns => ["biodata_id", "dataset_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "biodata_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "dbxref_id",
          unique_constraints => ["primary"],
        },
      ],
      moniker => "BiodataDbxref",
      primary_columns => ["biodata_id", "dbxref_id"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { biodata_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          cond => { "foreign.biodata_id" => "self.biodata_id" },
          condition => { biodata_id => "biodata_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dbxref_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => { dbxref_id => "dbxref_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "dbxref",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "BiodataDbxref",
      table => "biodata_dbxref",
      unique_constraints => [
        { columns => ["biodata_id", "dbxref_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
      columns => [
        {
          data_type => "integer",
          is_auto_increment => 1,
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "biodata_relationship_id",
          unique_constraints => ["primary"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "subject_id",
          unique_constraints => ["biodata_relationship_uniq"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "predicate_id",
          unique_constraints => ["biodata_relationship_uniq"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "object_id",
          unique_constraints => ["biodata_relationship_uniq"],
        },
        {
          data_type => "integer",
          default_value => "'0'",
          is_inflated => 0,
          is_nullable => 0,
          name => "rank",
          unique_constraints => ["biodata_relationship_uniq"],
        },
        {
          data_type => "integer",
          is_inflated => 0,
          is_nullable => 1,
          name => "start_coord",
        },
        {
          data_type => "integer",
          is_inflated => 0,
          is_nullable => 1,
          name => "end_coord",
        },
        {
          data_type => "smallint",
          default_value => "'0'",
          is_inflated => 0,
          is_nullable => 1,
          name => "strand",
        },
        {
          data_type => "double precision",
          default_value => "'0'",
          is_inflated => 0,
          is_nullable => 1,
          name => "score",
        },
        {
          data_type => "tinyint",
          default_value => "'0'",
          is_inflated => 0,
          is_nullable => 0,
          name => "is_location",
        },
      ],
      moniker => "BiodataRelationship",
      primary_columns => ["biodata_relationship_id"],
      relationships => [
        {
          attributes => undef,
          foreign_rel_name => "dataset",
          link_rel_name => "biodata_relationship_datasets",
          name => "datasets",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { object_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          cond => { "foreign.biodata_id" => "self.object_id" },
          condition => { biodata_id => "object_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          foreign_moniker => undef,
          moniker => undef,
          name => "object",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { subject_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          cond => { "foreign.biodata_id" => "self.subject_id" },
          condition => { biodata_id => "subject_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          foreign_moniker => undef,
          moniker => undef,
          name => "subject",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipDataset",
          cond => {
            "foreign.biodata_relationship_id" => "self.biodata_relationship_id",
          },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipDataset",
          type => "has_many",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { predicate_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.predicate_id" },
          condition => { term_id => "predicate_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "predicate",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipAttributeValue",
          cond => {
            "foreign.biodata_relationship_id" => "self.biodata_relationship_id",
          },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipAttributeValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship_attribute_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipAttributeValue",
          type => "has_many",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "BiodataRelationship",
      table => "biodata_relationship",
      unique_constraints => [
        { columns => ["biodata_relationship_id"], name => "primary" },
        {
          columns => ["object_id", "subject_id", "predicate_id", "rank"],
          name => "biodata_relationship_uniq",
        },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipAttributeValue",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "biodata_relationship_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "term_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          default_value      => "'0'",
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "rank",
          unique_constraints => ["primary"],
        },
        { data_type => "text", is_inflated => 0, is_nullable => 1, name => "value" },
      ],
      moniker => "BiodataRelationshipAttributeValue",
      primary_columns => ["biodata_relationship_id", "term_id", "rank"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => { term_id => "term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "NO ACTION",
            on_update => "NO ACTION",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { biodata_relationship_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "NO ACTION",
            on_update                 => "NO ACTION",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          cond => {
            "foreign.biodata_relationship_id" => "self.biodata_relationship_id",
          },
          condition => { biodata_relationship_id => "biodata_relationship_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipAttributeValue",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "BiodataRelationshipAttributeValue",
      table => "biodata_relationship_attribute_value",
      unique_constraints => [
        {
          columns => ["biodata_relationship_id", "term_id", "rank"],
          name => "primary",
        },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipDataset",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "dataset_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "biodata_relationship_id",
          unique_constraints => ["primary"],
        },
      ],
      moniker => "BiodataRelationshipDataset",
      primary_columns => ["biodata_relationship_id", "dataset_id"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dataset_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => { dataset_id => "dataset_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "dataset",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { biodata_relationship_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          cond => {
            "foreign.biodata_relationship_id" => "self.biodata_relationship_id",
          },
          condition => { biodata_relationship_id => "biodata_relationship_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipDataset",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "BiodataRelationshipDataset",
      table => "biodata_relationship_dataset",
      unique_constraints => [
        {
          columns => ["biodata_relationship_id", "dataset_id"],
          name => "primary",
        },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
      columns => [
        {
          data_type => "integer",
          is_auto_increment => 1,
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "biosequence_id",
          unique_constraints => ["primary"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "term_id",
          unique_constraints => ["biosequence_uniq"],
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 0,
          name => "checksum",
          size => 255,
          unique_constraints => ["biosequence_uniq"],
        },
        {
          data_type => "integer",
          is_inflated => 0,
          is_nullable => 0,
          name => "seqlen",
        },
        {
          data_type => "tinyint",
          default_value => "'0'",
          is_inflated => 0,
          is_nullable => 0,
          name => "circular",
        },
        { data_type => "text", is_inflated => 0, is_nullable => 1, name => "residues" },
      ],
      moniker => "Biosequence",
      primary_columns => ["biosequence_id"],
      relationships => [
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDataset",
          cond => { "foreign.biosequence_id" => "self.biosequence_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "biosequence_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDataset",
          type => "has_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "dataset",
          link_rel_name => "biosequence_datasets",
          name => "datasets",
          type => "many_to_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "dbxref",
          link_rel_name => "biosequence_dbxrefs",
          name => "dbxrefs",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "NO ACTION",
            on_update => "NO ACTION",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "NO ACTION",
            on_update                 => "NO ACTION",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => { term_id => "term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDbxref",
          cond => { "foreign.biosequence_id" => "self.biosequence_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "biosequence_dbxrefs",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDbxref",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          cond => { "foreign.biosequence_id" => "self.biosequence_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodatas",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          type => "has_many",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
      resultset_class => "Rotifer::DBIC::AnnotationDB::ResultSet::Biosequence",
      simple_moniker => "Biosequence",
      table => "biosequence",
      unique_constraints => [
        { columns => ["biosequence_id"], name => "primary" },
        { columns => ["term_id", "checksum"], name => "biosequence_uniq" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDataset",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "biosequence_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "dataset_id",
          unique_constraints => ["primary"],
        },
      ],
      moniker => "BiosequenceDataset",
      primary_columns => ["biosequence_id", "dataset_id"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dataset_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => { dataset_id => "dataset_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "dataset",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { biosequence_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          cond => { "foreign.biosequence_id" => "self.biosequence_id" },
          condition => { biosequence_id => "biosequence_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          foreign_moniker => undef,
          moniker => undef,
          name => "biosequence",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDataset",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "BiosequenceDataset",
      table => "biosequence_dataset",
      unique_constraints => [
        { columns => ["biosequence_id", "dataset_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDbxref",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "biosequence_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "dbxref_id",
          unique_constraints => ["primary"],
        },
      ],
      moniker => "BiosequenceDbxref",
      primary_columns => ["biosequence_id", "dbxref_id"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dbxref_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => { dbxref_id => "dbxref_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "dbxref",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { biosequence_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          cond => { "foreign.biosequence_id" => "self.biosequence_id" },
          condition => { biosequence_id => "biosequence_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          foreign_moniker => undef,
          moniker => undef,
          name => "biosequence",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDbxref",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "BiosequenceDbxref",
      table => "biosequence_dbxref",
      unique_constraints => [
        { columns => ["biosequence_id", "dbxref_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
      columns => [
        {
          data_type => "integer",
          is_auto_increment => 1,
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "dataset_id",
          unique_constraints => ["primary"],
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 0,
          name => "name",
          size => 255,
          unique_constraints => ["dataset_uniq"],
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 1,
          name => "authority",
          size => 255,
        },
        {
          _ic_dt_method => "timestamp",
          data_type => "timestamp",
          datetime_undef_if_invalid => 1,
          default_value => "current_timestamp",
          is_inflated => 1,
          is_nullable => 0,
          name => "lastmodified",
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 1,
          name => "loaded_by",
          size => 255,
        },
        {
          data_type => "text",
          is_inflated => 0,
          is_nullable => 1,
          name => "loaded_from",
        },
        {
          data_type => "text",
          is_inflated => 0,
          is_nullable => 1,
          name => "description",
        },
        {
          data_type => "tinyint",
          default_value => "'0'",
          is_inflated => 0,
          is_nullable => 0,
          name => "is_project",
        },
      ],
      moniker => "Dataset",
      primary_columns => ["dataset_id"],
      relationships => [
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "biosequence_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDataset",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::DatasetRelationship",
          cond => { "foreign.subject_id" => "self.dataset_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::DatasetRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "dataset_relationship_subjects",
          source => "Rotifer::DBIC::AnnotationDB::Result::DatasetRelationship",
          type => "has_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "biodata_relationship",
          link_rel_name => "biodata_relationship_datasets",
          name => "biodata_relationships",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipDataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipDataset",
          type => "has_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "dbxref",
          link_rel_name => "dbxref_datasets",
          name => "dbxrefs",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::DatasetRelationship",
          cond => { "foreign.object_id" => "self.dataset_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::DatasetRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "dataset_relationship_objects",
          source => "Rotifer::DBIC::AnnotationDB::Result::DatasetRelationship",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::DatasetAttributeValue",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::DatasetAttributeValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "dataset_attribute_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::DatasetAttributeValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataDataset",
          type => "has_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "biodata",
          link_rel_name => "biodata_datasets",
          name => "biodatas",
          type => "many_to_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "biosequence",
          link_rel_name => "biosequence_datasets",
          name => "biosequences",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::OrganismDataset",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefDataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "dbxref_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::DbxrefDataset",
          type => "has_many",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "Dataset",
      table => "dataset",
      unique_constraints => [
        { columns => ["name"], name => "dataset_uniq" },
        { columns => ["dataset_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::DatasetAttributeValue",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "dataset_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "term_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          default_value      => "'0'",
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "rank",
          unique_constraints => ["primary"],
        },
        { data_type => "text", is_inflated => 0, is_nullable => 1, name => "value" },
      ],
      moniker => "DatasetAttributeValue",
      primary_columns => ["dataset_id", "term_id", "rank"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dataset_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => { dataset_id => "dataset_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "dataset",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => { term_id => "term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::DatasetAttributeValue",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "DatasetAttributeValue",
      table => "dataset_attribute_value",
      unique_constraints => [
        { columns => ["dataset_id", "term_id", "rank"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::DatasetRelationship",
      columns => [
        {
          data_type => "integer",
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "dataset_relationship_id",
          unique_constraints => ["primary"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 1,
          name => "subject_id",
          unique_constraints => ["dataset_relationship_uniq"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 1,
          name => "object_id",
          unique_constraints => ["dataset_relationship_uniq"],
        },
      ],
      moniker => "DatasetRelationship",
      primary_columns => ["dataset_relationship_id"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            join_type => "LEFT",
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { object_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            join_type                 => "LEFT",
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          cond => { "foreign.dataset_id" => "self.object_id" },
          condition => { dataset_id => "object_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "object",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            join_type => "LEFT",
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { subject_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            join_type                 => "LEFT",
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          cond => { "foreign.dataset_id" => "self.subject_id" },
          condition => { dataset_id => "subject_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "subject",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::DatasetRelationship",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "DatasetRelationship",
      table => "dataset_relationship",
      unique_constraints => [
        {
          columns => ["subject_id", "object_id"],
          name => "dataset_relationship_uniq",
        },
        { columns => ["dataset_relationship_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
      columns => [
        {
          data_type => "integer",
          is_auto_increment => 1,
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "dbxref_id",
          unique_constraints => ["primary"],
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 0,
          name => "dbname",
          size => 40,
          unique_constraints => ["dbxref_uniq"],
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 0,
          name => "accession",
          size => 128,
          unique_constraints => ["dbxref_uniq"],
        },
        {
          data_type => "smallint",
          default_value => "'0'",
          is_inflated => 0,
          is_nullable => 0,
          name => "version",
          unique_constraints => ["dbxref_uniq"],
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 1,
          name => "acctype",
          size => 40,
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 1,
          name => "accgroup",
          size => 128,
        },
      ],
      moniker => "Dbxref",
      primary_columns => ["dbxref_id"],
      relationships => [
        {
          attributes => undef,
          foreign_rel_name => "dataset",
          link_rel_name => "dbxref_datasets",
          name => "datasets",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDbxref",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism_dbxrefs",
          source => "Rotifer::DBIC::AnnotationDB::Result::OrganismDbxref",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefQualifierValue",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefQualifierValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "dbxref_qualifier_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::DbxrefQualifierValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_dbxrefs",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataDbxref",
          type => "has_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "biodata",
          link_rel_name => "biodata_dbxrefs",
          name => "biodatas",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDbxref",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "biosequence_dbxrefs",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiosequenceDbxref",
          type => "has_many",
        },
        {
          attributes => undef,
          foreign_rel_name => "biosequence",
          link_rel_name => "biosequence_dbxrefs",
          name => "biosequences",
          type => "many_to_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermDbxref",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermDbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_dbxrefs",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermDbxref",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefDataset",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "dbxref_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::DbxrefDataset",
          type => "has_many",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
      resultset_class => "Rotifer::DBIC::AnnotationDB::ResultSet::Dbxref",
      simple_moniker => "Dbxref",
      table => "dbxref",
      unique_constraints => [
        {
          columns => ["accession", "dbname", "version"],
          name => "dbxref_uniq",
        },
        { columns => ["dbxref_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefDataset",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "dataset_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "dbxref_id",
          unique_constraints => ["primary"],
        },
      ],
      moniker => "DbxrefDataset",
      primary_columns => ["dataset_id", "dbxref_id"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dataset_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => { dataset_id => "dataset_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "dataset",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dbxref_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => { dbxref_id => "dbxref_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "dbxref",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefDataset",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "DbxrefDataset",
      table => "dbxref_dataset",
      unique_constraints => [
        { columns => ["dataset_id", "dbxref_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefQualifierValue",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "dbxref_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "term_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "smallint",
          default_value      => "'0'",
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "rank",
          unique_constraints => ["primary"],
        },
        { data_type => "text", is_inflated => 0, is_nullable => 1, name => "value" },
      ],
      moniker => "DbxrefQualifierValue",
      primary_columns => ["dbxref_id", "term_id", "rank"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => { term_id => "term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dbxref_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => { dbxref_id => "dbxref_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "dbxref",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefQualifierValue",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "DbxrefQualifierValue",
      table => "dbxref_qualifier_value",
      unique_constraints => [
        { columns => ["dbxref_id", "term_id", "rank"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
      columns => [
        {
          data_type => "integer",
          is_auto_increment => 1,
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "ontology_id",
          unique_constraints => ["primary"],
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 0,
          name => "name",
          size => 255,
          unique_constraints => ["ontology_name_uniq"],
        },
        {
          data_type => "text",
          is_inflated => 0,
          is_nullable => 1,
          name => "definition",
        },
      ],
      moniker => "Ontology",
      primary_columns => ["ontology_id"],
      relationships => [
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.ontology_id" => "self.ontology_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "terms",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          cond => { "foreign.ontology_id" => "self.ontology_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_relationships",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          cond => { "foreign.ontology_id" => "self.ontology_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_paths",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          type => "has_many",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "Ontology",
      table => "ontology",
      unique_constraints => [
        { columns => ["ontology_id"], name => "primary" },
        { columns => ["name"], name => "ontology_name_uniq" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
      columns => [
        {
          data_type => "integer",
          is_auto_increment => 1,
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "organism_id",
          unique_constraints => ["primary"],
        },
        {
          data_type => "integer",
          is_inflated => 0,
          is_nullable => 1,
          name => "ncbi_taxon_id",
          unique_constraints => ["organism_ncbitaxonid_uniq"],
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 1,
          name => "abbreviation",
          size => 40,
          unique_constraints => ["organism_abbreviation_uniq"],
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 0,
          name => "name",
          size => 255,
        },
        { data_type => "text", is_inflated => 0, is_nullable => 1, name => "lineage" },
        {
          data_type => "text",
          is_inflated => 0,
          is_nullable => 1,
          name => "classification",
        },
        { data_type => "text", is_inflated => 0, is_nullable => 1, name => "comment" },
      ],
      moniker => "Organism",
      primary_columns => ["organism_id"],
      relationships => [
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::OrganismAttributeValue",
          cond => { "foreign.organism_id" => "self.organism_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::OrganismAttributeValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism_attribute_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::OrganismAttributeValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDbxref",
          cond => { "foreign.organism_id" => "self.organism_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism_dbxrefs",
          source => "Rotifer::DBIC::AnnotationDB::Result::OrganismDbxref",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          cond => { "foreign.organism_id" => "self.organism_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodatas",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDataset",
          cond => { "foreign.organism_id" => "self.organism_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism_datasets",
          source => "Rotifer::DBIC::AnnotationDB::Result::OrganismDataset",
          type => "has_many",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "Organism",
      table => "organism",
      unique_constraints => [
        { columns => ["ncbi_taxon_id"], name => "organism_ncbitaxonid_uniq" },
        { columns => ["abbreviation"], name => "organism_abbreviation_uniq" },
        { columns => ["organism_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::OrganismAttributeValue",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "organism_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "term_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          default_value      => "'0'",
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "rank",
          unique_constraints => ["primary"],
        },
        { data_type => "text", is_inflated => 0, is_nullable => 1, name => "value" },
      ],
      moniker => "OrganismAttributeValue",
      primary_columns => ["organism_id", "term_id", "rank"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => { term_id => "term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { organism_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          cond => { "foreign.organism_id" => "self.organism_id" },
          condition => { organism_id => "organism_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism",
          source => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::OrganismAttributeValue",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "OrganismAttributeValue",
      table => "organism_attribute_value",
      unique_constraints => [
        { columns => ["organism_id", "term_id", "rank"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDataset",
      columns => [
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "organism_id",
          unique_constraints => ["organism_dataset_uniq"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "dataset_id",
          unique_constraints => ["organism_dataset_uniq"],
        },
      ],
      moniker => "OrganismDataset",
      primary_columns => [],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dataset_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          cond => { "foreign.dataset_id" => "self.dataset_id" },
          condition => { dataset_id => "dataset_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          foreign_moniker => undef,
          moniker => undef,
          name => "dataset",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dataset",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { organism_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          cond => { "foreign.organism_id" => "self.organism_id" },
          condition => { organism_id => "organism_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism",
          source => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDataset",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "OrganismDataset",
      table => "organism_dataset",
      unique_constraints => [
        {
          columns => ["organism_id", "dataset_id"],
          name => "organism_dataset_uniq",
        },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDbxref",
      columns => [
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "organism_id",
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "dbxref_id",
        },
      ],
      moniker => "OrganismDbxref",
      primary_columns => [],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dbxref_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => { dbxref_id => "dbxref_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "dbxref",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { organism_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          cond => { "foreign.organism_id" => "self.organism_id" },
          condition => { organism_id => "organism_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism",
          source => "Rotifer::DBIC::AnnotationDB::Result::Organism",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::OrganismDbxref",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "OrganismDbxref",
      table => "organism_dbxref",
      unique_constraints => [],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::Term",
      columns => [
        {
          data_type => "integer",
          is_auto_increment => 1,
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "term_id",
          unique_constraints => ["primary"],
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 0,
          name => "name",
          size => 255,
          unique_constraints => ["term_uniq"],
        },
        {
          data_type => "text",
          is_inflated => 0,
          is_nullable => 1,
          name => "definition",
        },
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 1,
          name => "identifier",
          size => 40,
          unique_constraints => ["term_identifier_uniq"],
        },
        {
          data_type => "char",
          default_value => "'0'",
          is_inflated => 0,
          is_nullable => 1,
          name => "is_obsolete",
          size => 1,
          unique_constraints => ["term_uniq"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "ontology_id",
          unique_constraints => ["term_uniq"],
        },
      ],
      moniker => "Term",
      primary_columns => ["term_id"],
      relationships => [
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::DatasetAttributeValue",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::DatasetAttributeValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "dataset_attribute_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::DatasetAttributeValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { ontology_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
          cond => { "foreign.ontology_id" => "self.ontology_id" },
          condition => { ontology_id => "ontology_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
          foreign_moniker => undef,
          moniker => undef,
          name => "ontology",
          source => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipAttributeValue",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipAttributeValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationship_attribute_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationshipAttributeValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_attribute_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataAttributeValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          cond => { "foreign.predicate_term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_relationship_predicate_terms",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermDbxref",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermDbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_dbxrefs",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermDbxref",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::OrganismAttributeValue",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::OrganismAttributeValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "organism_attribute_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::OrganismAttributeValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          cond => { "foreign.subject_term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_relationship_subject_terms",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          cond => { "foreign.object_term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_relationship_object_terms",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          cond => { "foreign.predicate_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodata_relationships",
          source => "Rotifer::DBIC::AnnotationDB::Result::BiodataRelationship",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefQualifierValue",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::DbxrefQualifierValue",
          foreign_moniker => undef,
          moniker => undef,
          name => "dbxref_qualifier_values",
          source => "Rotifer::DBIC::AnnotationDB::Result::DbxrefQualifierValue",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          cond => { "foreign.object_term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_path_object_terms",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermSynonym",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermSynonym",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_synonyms",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermSynonym",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          foreign_moniker => undef,
          moniker => undef,
          name => "biodatas",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biodata",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          cond => { "foreign.subject_term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_path_subject_terms",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          cond => { "foreign.predicate_term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          foreign_moniker => undef,
          moniker => undef,
          name => "term_path_predicate_terms",
          source => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
          type => "has_many",
        },
        {
          attr => {},
          attributes => { cascade_copy => 0, cascade_delete => 0 },
          attrs => {
            accessor       => "multi",
            cascade_copy   => 0,
            cascade_delete => 0,
            join_type      => "LEFT",
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => 'fix',
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          foreign_moniker => undef,
          moniker => undef,
          name => "biosequences",
          source => "Rotifer::DBIC::AnnotationDB::Result::Biosequence",
          type => "has_many",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "Term",
      table => "term",
      unique_constraints => [
        { columns => ["identifier"], name => "term_identifier_uniq" },
        {
          columns => ["name", "ontology_id", "is_obsolete"],
          name => "term_uniq",
        },
        { columns => ["term_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::TermDbxref",
      columns => [
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "term_id",
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "dbxref_id",
          unique_constraints => ["primary"],
        },
        { data_type => "smallint", is_inflated => 0, is_nullable => 1, name => "rank" },
      ],
      moniker => "TermDbxref",
      primary_columns => ["term_id", "dbxref_id"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => { term_id => "term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { dbxref_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          cond => { "foreign.dbxref_id" => "self.dbxref_id" },
          condition => { dbxref_id => "dbxref_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          foreign_moniker => undef,
          moniker => undef,
          name => "dbxref",
          source => "Rotifer::DBIC::AnnotationDB::Result::Dbxref",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::TermDbxref",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "TermDbxref",
      table => "term_dbxref",
      unique_constraints => [{ columns => ["term_id", "dbxref_id"], name => "primary" }],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
      columns => [
        {
          data_type => "integer",
          is_auto_increment => 1,
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "term_path_id",
          unique_constraints => ["primary"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "subject_term_id",
          unique_constraints => ["term_path_subject_term_id_key"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "predicate_term_id",
          unique_constraints => ["term_path_subject_term_id_key"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "object_term_id",
          unique_constraints => ["term_path_subject_term_id_key"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "ontology_id",
          unique_constraints => ["term_path_subject_term_id_key"],
        },
        {
          data_type => "integer",
          is_inflated => 0,
          is_nullable => 1,
          name => "distance",
          unique_constraints => ["term_path_subject_term_id_key"],
        },
      ],
      moniker => "TermPath",
      primary_columns => ["term_path_id"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { predicate_term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.predicate_term_id" },
          condition => { term_id => "predicate_term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "predicate_term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { object_term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.object_term_id" },
          condition => { term_id => "object_term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "object_term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { subject_term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.subject_term_id" },
          condition => { term_id => "subject_term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "subject_term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { ontology_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
          cond => { "foreign.ontology_id" => "self.ontology_id" },
          condition => { ontology_id => "ontology_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
          foreign_moniker => undef,
          moniker => undef,
          name => "ontology",
          source => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::TermPath",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "TermPath",
      table => "term_path",
      unique_constraints => [
        {
          columns => [
            "subject_term_id",
            "predicate_term_id",
            "object_term_id",
            "ontology_id",
            "distance",
          ],
          name => "term_path_subject_term_id_key",
        },
        { columns => ["term_path_id"], name => "primary" },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
      columns => [
        {
          data_type => "integer",
          is_auto_increment => 1,
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "term_relationship_id",
          unique_constraints => ["primary"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "subject_term_id",
          unique_constraints => ["term_relationship_subject_term_id_key"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "predicate_term_id",
          unique_constraints => ["term_relationship_subject_term_id_key"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "object_term_id",
          unique_constraints => ["term_relationship_subject_term_id_key"],
        },
        {
          data_type => "integer",
          is_foreign_key => 1,
          is_inflated => 0,
          is_nullable => 0,
          name => "ontology_id",
          unique_constraints => ["term_relationship_subject_term_id_key"],
        },
      ],
      moniker => "TermRelationship",
      primary_columns => ["term_relationship_id"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { predicate_term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.predicate_term_id" },
          condition => { term_id => "predicate_term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "predicate_term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { object_term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.object_term_id" },
          condition => { term_id => "object_term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "object_term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { subject_term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.subject_term_id" },
          condition => { term_id => "subject_term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "subject_term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { ontology_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
          cond => { "foreign.ontology_id" => "self.ontology_id" },
          condition => { ontology_id => "ontology_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
          foreign_moniker => undef,
          moniker => undef,
          name => "ontology",
          source => "Rotifer::DBIC::AnnotationDB::Result::Ontology",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::TermRelationship",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "TermRelationship",
      table => "term_relationship",
      unique_constraints => [
        { columns => ["term_relationship_id"], name => "primary" },
        {
          columns => [
            "subject_term_id",
            "predicate_term_id",
            "object_term_id",
            "ontology_id",
          ],
          name => "term_relationship_subject_term_id_key",
        },
      ],
    },
    {
      class => "Rotifer::DBIC::AnnotationDB::Result::TermSynonym",
      columns => [
        {
          data_type => "varchar",
          is_inflated => 0,
          is_nullable => 0,
          is_primary => 1,
          name => "synonym",
          size => 255,
          unique_constraints => ["primary"],
        },
        {
          data_type          => "integer",
          is_foreign_key     => 1,
          is_inflated        => 0,
          is_nullable        => 0,
          is_primary         => 1,
          name               => "term_id",
          unique_constraints => ["primary"],
        },
      ],
      moniker => "TermSynonym",
      primary_columns => ["term_id", "synonym"],
      relationships => [
        {
          attr => {},
          attributes => {
            is_deferrable => 1,
            is_foreign_key_constraint => 1,
            on_delete => "CASCADE",
            on_update => "CASCADE",
            undef_on_null_fk => 1,
          },
          attrs => {
            accessor                  => "single",
            fk_columns                => { term_id => 1 },
            is_deferrable             => 1,
            is_foreign_key_constraint => 1,
            on_delete                 => "CASCADE",
            on_update                 => "CASCADE",
            undef_on_null_fk          => 1,
          },
          class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          cond => { "foreign.term_id" => "self.term_id" },
          condition => { term_id => "term_id" },
          foreign_class => "Rotifer::DBIC::AnnotationDB::Result::Term",
          foreign_moniker => undef,
          moniker => undef,
          name => "term",
          source => "Rotifer::DBIC::AnnotationDB::Result::Term",
          type => "belongs_to",
        },
      ],
      result_class => "Rotifer::DBIC::AnnotationDB::Result::TermSynonym",
      resultset_class => "DBIx::Class::ResultSet",
      simple_moniker => "TermSynonym",
      table => "term_synonym",
      unique_constraints => [{ columns => ["term_id", "synonym"], name => "primary" }],
    },
  ];
  $a->[0]{relationships}[1]{condition} = $a->[0]{relationships}[1]{cond};
  $a->[0]{relationships}[3]{condition} = $a->[0]{relationships}[3]{cond};
  $a->[0]{relationships}[4]{condition} = $a->[0]{relationships}[4]{cond};
  $a->[0]{relationships}[6]{condition} = $a->[0]{relationships}[6]{cond};
  $a->[0]{relationships}[8]{condition} = $a->[0]{relationships}[8]{cond};
  $a->[1]{columns}[0] = $a->[0]{columns}[0];
  $a->[1]{columns}[1] = $a->[0]{columns}[1];
  $a->[1]{columns}[2] = $a->[0]{columns}[2];
  $a->[1]{columns}[3] = $a->[0]{columns}[3];
  $a->[1]{columns}[4] = $a->[0]{columns}[4];
  $a->[1]{columns}[5] = $a->[0]{columns}[5];
  $a->[1]{columns}[6] = $a->[0]{columns}[6];
  $a->[1]{columns}[7] = $a->[0]{columns}[7];
  $a->[1]{columns}[8] = $a->[0]{columns}[8];
  $a->[1]{columns}[9] = $a->[0]{columns}[9];
  $a->[1]{relationships}[1]{attributes} = $a->[0]{relationships}[1]{attributes};
  $a->[1]{relationships}[1]{attrs} = $a->[0]{relationships}[1]{attrs};
  $a->[1]{relationships}[1]{cond} = $a->[0]{relationships}[1]{cond};
  $a->[1]{relationships}[1]{condition} = $a->[0]{relationships}[1]{cond};
  $a->[1]{relationships}[3]{attributes} = $a->[0]{relationships}[3]{attributes};
  $a->[1]{relationships}[3]{attrs} = $a->[0]{relationships}[3]{attrs};
  $a->[1]{relationships}[3]{cond} = $a->[0]{relationships}[3]{cond};
  $a->[1]{relationships}[3]{condition} = $a->[0]{relationships}[3]{cond};
  $a->[1]{relationships}[4]{attributes} = $a->[0]{relationships}[4]{attributes};
  $a->[1]{relationships}[4]{attrs} = $a->[0]{relationships}[4]{attrs};
  $a->[1]{relationships}[4]{cond} = $a->[0]{relationships}[4]{cond};
  $a->[1]{relationships}[4]{condition} = $a->[0]{relationships}[4]{cond};
  $a->[1]{relationships}[5]{attributes} = $a->[0]{relationships}[5]{attributes};
  $a->[1]{relationships}[5]{attrs} = $a->[0]{relationships}[5]{attrs};
  $a->[1]{relationships}[5]{cond} = $a->[0]{relationships}[5]{cond};
  $a->[1]{relationships}[5]{condition} = $a->[0]{relationships}[5]{condition};
  $a->[1]{relationships}[6]{attributes} = $a->[0]{relationships}[7]{attributes};
  $a->[1]{relationships}[6]{attrs} = $a->[0]{relationships}[7]{attrs};
  $a->[1]{relationships}[6]{cond} = $a->[0]{relationships}[7]{cond};
  $a->[1]{relationships}[6]{condition} = $a->[0]{relationships}[7]{condition};
  $a->[1]{relationships}[7]{attributes} = $a->[0]{relationships}[6]{attributes};
  $a->[1]{relationships}[7]{attrs} = $a->[0]{relationships}[6]{attrs};
  $a->[1]{relationships}[7]{cond} = $a->[0]{relationships}[6]{cond};
  $a->[1]{relationships}[7]{condition} = $a->[0]{relationships}[6]{cond};
  $a->[1]{relationships}[8]{attributes} = $a->[0]{relationships}[8]{attributes};
  $a->[1]{relationships}[8]{attrs} = $a->[0]{relationships}[8]{attrs};
  $a->[1]{relationships}[8]{cond} = $a->[0]{relationships}[8]{cond};
  $a->[1]{relationships}[8]{condition} = $a->[0]{relationships}[8]{cond};
  $a->[1]{relationships}[9]{attributes} = $a->[0]{relationships}[9]{attributes};
  $a->[1]{relationships}[9]{attrs} = $a->[0]{relationships}[9]{attrs};
  $a->[1]{relationships}[9]{cond} = $a->[0]{relationships}[9]{cond};
  $a->[1]{relationships}[9]{condition} = $a->[0]{relationships}[9]{condition};
  $a->[1]{unique_constraints}[0]{columns} = $a->[0]{unique_constraints}[0]{columns};
  $a->[1]{unique_constraints}[1]{columns} = $a->[0]{unique_constraints}[1]{columns};
  $a->[2]{columns}[0] = $a->[0]{columns}[0];
  $a->[2]{columns}[1] = $a->[0]{columns}[1];
  $a->[2]{columns}[2] = $a->[0]{columns}[2];
  $a->[2]{columns}[3] = $a->[0]{columns}[3];
  $a->[2]{columns}[4] = $a->[0]{columns}[4];
  $a->[2]{columns}[5] = $a->[0]{columns}[5];
  $a->[2]{columns}[6] = $a->[0]{columns}[6];
  $a->[2]{columns}[7] = $a->[0]{columns}[7];
  $a->[2]{columns}[8] = $a->[0]{columns}[8];
  $a->[2]{columns}[9] = $a->[0]{columns}[9];
  $a->[2]{relationships}[1]{attributes} = $a->[0]{relationships}[1]{attributes};
  $a->[2]{relationships}[1]{attrs} = $a->[0]{relationships}[1]{attrs};
  $a->[2]{relationships}[1]{cond} = $a->[0]{relationships}[1]{cond};
  $a->[2]{relationships}[1]{condition} = $a->[0]{relationships}[1]{cond};
  $a->[2]{relationships}[3]{attributes} = $a->[0]{relationships}[3]{attributes};
  $a->[2]{relationships}[3]{attrs} = $a->[0]{relationships}[3]{attrs};
  $a->[2]{relationships}[3]{cond} = $a->[0]{relationships}[3]{cond};
  $a->[2]{relationships}[3]{condition} = $a->[0]{relationships}[3]{cond};
  $a->[2]{relationships}[4]{attributes} = $a->[0]{relationships}[4]{attributes};
  $a->[2]{relationships}[4]{attrs} = $a->[0]{relationships}[4]{attrs};
  $a->[2]{relationships}[4]{cond} = $a->[0]{relationships}[4]{cond};
  $a->[2]{relationships}[4]{condition} = $a->[0]{relationships}[4]{cond};
  $a->[2]{relationships}[5]{attributes} = $a->[0]{relationships}[5]{attributes};
  $a->[2]{relationships}[5]{attrs} = $a->[0]{relationships}[5]{attrs};
  $a->[2]{relationships}[5]{cond} = $a->[0]{relationships}[5]{cond};
  $a->[2]{relationships}[5]{condition} = $a->[0]{relationships}[5]{condition};
  $a->[2]{relationships}[6]{attributes} = $a->[0]{relationships}[7]{attributes};
  $a->[2]{relationships}[6]{attrs} = $a->[0]{relationships}[7]{attrs};
  $a->[2]{relationships}[6]{cond} = $a->[0]{relationships}[7]{cond};
  $a->[2]{relationships}[6]{condition} = $a->[0]{relationships}[7]{condition};
  $a->[2]{relationships}[7]{attributes} = $a->[0]{relationships}[6]{attributes};
  $a->[2]{relationships}[7]{attrs} = $a->[0]{relationships}[6]{attrs};
  $a->[2]{relationships}[7]{cond} = $a->[0]{relationships}[6]{cond};
  $a->[2]{relationships}[7]{condition} = $a->[0]{relationships}[6]{cond};
  $a->[2]{relationships}[8]{attributes} = $a->[0]{relationships}[8]{attributes};
  $a->[2]{relationships}[8]{attrs} = $a->[0]{relationships}[8]{attrs};
  $a->[2]{relationships}[8]{cond} = $a->[0]{relationships}[8]{cond};
  $a->[2]{relationships}[8]{condition} = $a->[0]{relationships}[8]{cond};
  $a->[2]{relationships}[9]{attributes} = $a->[0]{relationships}[9]{attributes};
  $a->[2]{relationships}[9]{attrs} = $a->[0]{relationships}[9]{attrs};
  $a->[2]{relationships}[9]{cond} = $a->[0]{relationships}[9]{cond};
  $a->[2]{relationships}[9]{condition} = $a->[0]{relationships}[9]{condition};
  $a->[2]{unique_constraints}[0]{columns} = $a->[0]{unique_constraints}[0]{columns};
  $a->[2]{unique_constraints}[1]{columns} = $a->[0]{unique_constraints}[1]{columns};
  $a->[6]{relationships}[3]{condition} = $a->[6]{relationships}[3]{cond};
  $a->[6]{relationships}[5]{condition} = $a->[6]{relationships}[5]{cond};
  $a->[9]{relationships}[0]{condition} = $a->[9]{relationships}[0]{cond};
  $a->[9]{relationships}[4]{condition} = $a->[9]{relationships}[4]{cond};
  $a->[9]{relationships}[5]{condition} = $a->[9]{relationships}[5]{cond};
  $a->[12]{relationships}[0]{condition} = $a->[12]{relationships}[0]{cond};
  $a->[12]{relationships}[1]{condition} = $a->[12]{relationships}[1]{cond};
  $a->[12]{relationships}[3]{condition} = $a->[12]{relationships}[3]{cond};
  $a->[12]{relationships}[5]{condition} = $a->[12]{relationships}[5]{cond};
  $a->[12]{relationships}[6]{condition} = $a->[12]{relationships}[6]{cond};
  $a->[12]{relationships}[7]{condition} = $a->[12]{relationships}[7]{cond};
  $a->[12]{relationships}[10]{condition} = $a->[12]{relationships}[10]{cond};
  $a->[12]{relationships}[11]{condition} = $a->[12]{relationships}[11]{cond};
  $a->[15]{relationships}[1]{condition} = $a->[15]{relationships}[1]{cond};
  $a->[15]{relationships}[2]{condition} = $a->[15]{relationships}[2]{cond};
  $a->[15]{relationships}[3]{condition} = $a->[15]{relationships}[3]{cond};
  $a->[15]{relationships}[5]{condition} = $a->[15]{relationships}[5]{cond};
  $a->[15]{relationships}[7]{condition} = $a->[15]{relationships}[7]{cond};
  $a->[15]{relationships}[8]{condition} = $a->[15]{relationships}[8]{cond};
  $a->[18]{relationships}[0]{condition} = $a->[18]{relationships}[0]{cond};
  $a->[18]{relationships}[1]{condition} = $a->[18]{relationships}[1]{cond};
  $a->[18]{relationships}[2]{condition} = $a->[18]{relationships}[2]{cond};
  $a->[19]{relationships}[0]{condition} = $a->[19]{relationships}[0]{cond};
  $a->[19]{relationships}[1]{condition} = $a->[19]{relationships}[1]{cond};
  $a->[19]{relationships}[2]{condition} = $a->[19]{relationships}[2]{cond};
  $a->[19]{relationships}[3]{condition} = $a->[19]{relationships}[3]{cond};
  $a->[23]{relationships}[0]{condition} = $a->[23]{relationships}[0]{cond};
  $a->[23]{relationships}[2]{condition} = $a->[23]{relationships}[2]{cond};
  $a->[23]{relationships}[3]{condition} = $a->[23]{relationships}[3]{cond};
  $a->[23]{relationships}[4]{condition} = $a->[23]{relationships}[4]{cond};
  $a->[23]{relationships}[5]{condition} = $a->[23]{relationships}[5]{cond};
  $a->[23]{relationships}[6]{condition} = $a->[23]{relationships}[6]{cond};
  $a->[23]{relationships}[7]{condition} = $a->[23]{relationships}[7]{cond};
  $a->[23]{relationships}[8]{condition} = $a->[23]{relationships}[8]{cond};
  $a->[23]{relationships}[9]{condition} = $a->[23]{relationships}[9]{cond};
  $a->[23]{relationships}[10]{condition} = $a->[23]{relationships}[10]{cond};
  $a->[23]{relationships}[11]{condition} = $a->[23]{relationships}[11]{cond};
  $a->[23]{relationships}[12]{condition} = $a->[23]{relationships}[12]{cond};
  $a->[23]{relationships}[13]{condition} = $a->[23]{relationships}[13]{cond};
  $a->[23]{relationships}[14]{condition} = $a->[23]{relationships}[14]{cond};
  $a->[23]{relationships}[15]{condition} = $a->[23]{relationships}[15]{cond};
  $a->[23]{relationships}[16]{condition} = $a->[23]{relationships}[16]{cond};
  $a;
}


##### user #####
""


