import os 
from Bio import SeqIO


configfile: "config.yaml"
localrules: ipgs, combine_neighborhood, add_taxonomy

input_file = config["input_file"]
batch_size = config["batch_size"]

def get_seq_ids():
    with open(input_file) as f:
        records = [line.strip() for line in f if line.strip()]

    os.makedirs("split", exist_ok=True)

    # Split the records into batches
    batched_records = [records[i:i + batch_size] for i in range(0, len(records), batch_size)]

    seq_ids = []
    for batch_num, batch in enumerate(batched_records, start=1):
        batch_filename = f"split/batch_{batch_num}.txt"
        with open(batch_filename, "w") as out:
            for pid in batch:
                out.write(pid + "\n")
                seq_ids.append(pid)

    return seq_ids, len(batched_records)
SEQ_IDS, NUM_BATCHES = get_seq_ids()

rule all:
    input:
        "results/all_neighborhood.pkl"

rule ipgs:
    input:
        acc=config["input_file"]
    output:
        out_file="results/ipg.pkl"
    resources:
        mem_mb=4000,
        threads=8
    script:
        "scripts/ipg.py"
rule add_taxonomy:
	input:
		ipg_combined="results/ipg.pkl"
	output:
		out_file="results/ipg_with_tax.pkl"
	script:
		"scripts/taxonomy.py"
rule neighborhood:
    input: 
        acc="split/batch_{batch_num}.txt",
        ipg="results/ipg_with_tax.pkl"
    output:
        out_file="results/neighborhood_batch_{batch_num}.pkl"
    script:
        "scripts/neighborhood.py"
rule combine_neighborhood:
    input:
        expand("results/neighborhood_batch_{batch_num}.pkl", batch_num=range(1, NUM_BATCHES + 1))  # Collect all batch outputs
    output:
        out_file="results/all_neighborhood.pkl",  # Final combined output
    script:
        "scripts/combine_neighborhood.py"
