#!/usr/bin/env perl

# LIBRARIES and PRAGMAS: start
use autodie qw(:all);
use FindBin;
use lib "$FindBin::RealBin/../perl/lib";
use Rotifer;
#use Rotifer::DB::NCBI::EUtils qw(get_seqids);
use Rotifer::DB::NCBI::EDirect qw(get_seqids);
use strict;
use warnings;
our $VERSION="0.99.95";
# LIBRARIES and PRAGMAS: end

# Parse configuration/options
my $CONFIG = &parse_configuration();

# MAIN PROGRAM: start
foreach my $arrayref (get_seqids({ retry => $CONFIG->retry,
				   debug => $CONFIG->debug,
				 },@ARGV)) {
    print join("\t",@$arrayref),"\n";
}

# MAIN PROGRAM: end
exit 0;

###############
# Subroutines

# Creating the configuration object
#
# See perldoc AppConfig::AutoDoc for details
sub parse_configuration {
    use Application::Config qw(:argcount GetConfig);
    my $appconfig = GetConfig({ EXPAND_ARGV    => 1, 
				EXPAND_STDIN   => 1, 
			      },

			      # Now, some examples of options you can create
			      'retry' => {
				  ALIAS    => 'r',
				  DEFAULT  => 5,
				  ARGCOUNT => ARGCOUNT_ONE,
				  SUMMARY  => "Due to network or Entrez server's instability, the program may fail to retrive information for some GIs in a first attempt. This parameter controls how many times the program should repeat the query to get missing results.",
			      },
	);

    return $appconfig;
}


# POD: start
# Documentation (use option -doc or --doc to see it!)
#
# AppConfig::AutoDoc can automatically extract Plain Old Documentation
# from within the caller program's, add descriptions of the options
# created by L<define> and do some pretty formatting for output.
# 
# Note that POD may be added anywhere in your program, thus allowing 
# the documentation for a program to be left side by side with the
# function's definition.

=head1 NAME

 accession2gi - get NCBI GI and accession numbers for valid NCBI IDs

=head1 SYNOPSIS

 accession2gi U39202

=head1 DESCRIPTION

Use this program to get a table of NCBI identfiers.

=head1 AUTHOR

 Robson Francisco de Souza

=cut
# POD: end
