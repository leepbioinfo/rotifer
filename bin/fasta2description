#!/usr/bin/env perl

# LIBRARIES and PRAGMAS: start
use autodie qw(:all);
use FindBin;
use lib "$FindBin::RealBin/../perl/lib";
use Rotifer::Utils qw(nr2ids);
use strict;
use warnings;
# LIBRARIES and PRAGMAS: end

# Parse command line options
my $CONFIG = parse_configuration();

# Each target could be a sequence file or a GI
print join("\t",qw(seqid acctype description)),"\n" if ($CONFIG->header);
foreach my $file (@ARGV) {
    open(my $fh, "<$file");
  SEQ: while (<$fh>) {
      chomp;
      next unless (/^\>/);
      if (/^>gi\|/) {
	  foreach my $hash (nr2ids($_)) {
	      next unless (grep { $hash->{acctype} eq $_ || $_ eq 'all' } @{$CONFIG->acctype});
	      print join("\t",map { defined $hash->{$_} ? $hash->{$_} : '' } qw(accession acctype description)),"\n";
	  }
      } else {
	  my ($id,$desc) = /^>(\S+)\s*(.*)/;
	  print join("\t",$id || $_, $id, $desc || "NO DESCRIPTION"),"\n";
      }
  }
    close($fh);
}

# Terminate execution nicely
exit 0;

#####
# Add your subroutines below
#####

######
# Command line parsing, debugging and help messages
######

sub my_id_parser {
    my @id = split(/\|+/,$_[0]);
    return scalar(@id) > 1 ? $id[1] : $_[0];
}

sub parse_configuration {
    # Parser definition
    use Application::Config qw(:argcount GetConfig);
    my $appconfig = GetConfig({},

			      'acctype'    => {
				  ALIAS    => 't',
				  DEFAULT  =>  [ 'GI', 'fakeGI' ],
				  ARGCOUNT => ARGCOUNT_LIST,
				  SUMMARY  => "Type of accessions that should be printed.",
			      },

			      'header'    => {
				  ALIAS    => 'y',
				  DEFAULT  =>  1,
				  ARGCOUNT => ARGCOUNT_NONE,
				  SUMMARY  => "Add column headers.",
			      },
	);

    # Check arguments
    push(@ARGV,'-') if (! -t STDIN);

    return $appconfig;
}

=head1 NAME

 fasta2description - extract sequence descriptions from FASTA file headers

=head1 SYNOPSIS

 fasta2description file.fasta

=head1 DESCRIPTION

This program generates a table with sequence identifiers and descriptions
from a FASTA file.

=head1 AUTHOR

 Robson Francisco de Souza

=cut
# POD: end
