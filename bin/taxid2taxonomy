#!/usr/bin/env perl

use FindBin;
use lib "$FindBin::RealBin/../perl/lib";
use XML::Simple;
use Bio::DB::EUtilities;
use Bio::Tools::EUtilities;
use strict;
use warnings;

# Global variables: taxon names
our $DEFAULT_TAXON_NAMES="$FindBin::RealBin/../data/taxonomy/taxonomy.txt";

# Parse command line options
my $CONFIG = parse_configuration();

# Cleaning ARGV (just in case...)
@ARGV = grep { length } map { s/^\s+//; s/\s+$//; $_ } @ARGV;

# Divide list of GIs in sets of size $CONFIG->batch_size
my $start=0;
while ($start <= $#{ARGV}) {
    my $end = $start + $CONFIG->batch_size - 1;
    $end = $end > $#{ARGV} ? $#ARGV : $end;

    # Retrieve and print
    #print "Next batch: ",join(" .. ",$start,$end),"\n";
    foreach my $data (retrieve_taxonomy(@ARGV[$start..$end])) {
	my @data = ($data->{"taxid"}, $data->{"name"});
	push(@data, join(">",grep { $_ = lc($_); exists $CONFIG->_preferred_taxons->{$_} } split("; ",$data->{"lineage"})));
	push(@data, $data->{'lineage'}) if $CONFIG->full;
	print join("\t",@data),"\n";
    }

    # Increment
    $start += $CONFIG->batch_size;
}

# Terminate execution nicely
exit 0;

#####
# Add your subroutines below
#####

sub retrieve_taxonomy {
    my @ids = @_;

    # Epost TaxIds: send list
    my $factory = Bio::DB::EUtilities->new(-eutil      => 'epost',
					   -email      => 'mymail@foo.bar',
					   -db         => 'taxonomy',
					   -id         => \@ids,
					   -usehistory => 'y');
    my $parser = Bio::Tools::EUtilities->new(-eutil    => 'epost',
					     -response => $factory->get_Response);
    my $history = $parser->next_History;

    # Efeatch for TaxIds: retrieve XML descriptions
    $factory = Bio::DB::EUtilities->new(-eutil   => 'efetch',
					-email      => 'mymail@foo.bar',
					-db      => 'taxonomy',
					-report  => 'xml',
					-history => $history);
    my $xml = XMLin($factory->get_Response->content);
    my @data = ref($xml->{'Taxon'}) eq 'ARRAY' ? @{$xml->{'Taxon'}} : ref($xml) eq 'HASH' ? $xml->{'Taxon'} : die "Unable to parse taxonomy entry: unknown response";
    my %taxon_name = (0 => 'NO_NAME');
    my %lineage = ( 0 => 'NO_LINEAGE' );
    foreach my $taxon (@data) {
	my $taxid           = $taxon->{'TaxId'}          || 0;
	$lineage{$taxid}    = $taxon->{'Lineage'}        || 'NO_LINEAGE';
	$taxon_name{$taxid} = $taxon->{'ScientificName'} || 'NO_NAME';
    }

    my @taxa = ();
    foreach my $taxid (@ids) {
	push(@taxa,{
	    'taxid'   => $taxid,
	    'name'    => $taxon_name{$taxid},
	    'lineage' => $lineage{$taxid}
	     });
    }

    return @taxa;
}

######
# Command line parsing, debugging and help messages
######

sub parse_configuration {
    # Parser definition
    use Application::Config qw(:argcount GetConfig);
    my $appconfig = GetConfig(# Configuring library
			      { EXPAND_ARGV => 1, EXPAND_STDIN => 1 },
			      # Parameters
			      'batch_size' => {
				  ALIAS    => 's',
				  DEFAULT  => 8000,
				  ARGCOUNT => ARGCOUNT_ONE,
				  SUMMARY  => "Maximum number of descriptions per download",
			      },
			      'full' => {
				  ALIAS    => 'f',
				  DEFAULT  => 0,
				  ARGCOUNT => ARGCOUNT_NONE,
				  SUMMARY  => "Include a column with the complete lineage information for each taxon",
			      },
			      'preferred_taxons' => {
				  ALIAS    => 'preferred|p',
				  ACTION   => 'EXPAND_FILES',
				  DEFAULT  => [ $DEFAULT_TAXON_NAMES ],
				  ARGCOUNT => ARGCOUNT_LIST,
				  SUMMARY  => "List of clades to add to the taxonomy summary column",
			      },
	);

    # Build index for preferred taxons
    $appconfig->define('_preferred_taxons' => { ARGCOUNT => ARGCOUNT_HASH });
    %{ $appconfig->_preferred_taxons } = map { (lc($_),1) } @{ $appconfig->preferred_taxons };

    $appconfig->_dump_to_stderr if ($appconfig->debug =~ /^conf/);

    return $appconfig;
}

# POD: start
# Documentation (use option -doc or --doc to see it!)

=head1 NAME

 taxid2taxonomy - get NCBI taxon descriptions

=head1 SYNOPSIS

 # Simple usage
 gi2taxonomy "Homo sapiens" 9606

=head1 DESCRIPTION

This program downloads short desccriptions of taxons for valid taxon
names or numbers from the NCBI Taxonomy database. It can load the list
of taxon Ids/names from files and/or pipes as long as there is only 
one identifier per row.

=head1 AUTHOR

 Robson Francisco de Souza

=cut
# POD: end
