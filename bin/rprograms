#!/usr/bin/env python3

import os
import warnings
warnings.filterwarnings("ignore")
import sys
from subprocess import PIPE, Popen
from prettytable import PrettyTable
import re
import rotifer.core.cli as corecli

__version__ = 0.10
__authors__ = 'Gilberto Kaihami'

def parse_cli():
    parser = corecli.parser(description = 'Show rotifer programs')

    # Add another options here

    parser.add( long_arg = '--show',
                short_arg = '-s',
                dest = 'show',
                helper = 'Show program',
                action = "store_true"
                )
    args = parser.parse_args()

    return args

def blockPrint():
    sys.stderr = open(os.devnull, 'w')
    sys.stdout = open(os.devnull, 'w')

def enablePrint():
    sys.stdout = sys.__stdout__

def show(path = __file__):
    if os.path.islink(__file__):
        folder = os.path.dirname(os.path.realpath(path))
    else:
        folder = os.path.dirname(os.path.abspath(path))

    ansi_escape = re.compile(r'\x1B\[[0-?]*[ -/]*[@-~]')
    t = PrettyTable(['Name', 'Description', 'Version'])

    for p in os.listdir(folder):
        path = os.path.join(folder, p)
        if os.path.isfile(path):
            desc = ''
            version = ''
            authors = ''
            try:
                comm = Popen(f'{path} --version',stderr = PIPE, stdout = PIPE, shell = True)
                s = comm.communicate()[0].decode('utf-8').split('\n')
                if len(s) < 7 and len(s) > 0:
                    ls = [x for x in s if x != '']
                    for x in range(0, len(ls)):
                        if 'NO INPUT' in ls[x]:
                            break
                        else:
                            for y in range(1, len(ls)):

                                string = ansi_escape.sub('', ls[y])
                                if 'Version' in string:
                                    version = string.replace('Version: ', '')
                                elif 'Authors' in string:
                                    pass
                                #     authors = string.replace('Authors: ', '')
                                #     print([x.split(' ') for x in authors.split(';')])
                                else:
                                    desc += string
                            break
                t.add_row([p, desc, version])

            except:
                pass
            try:
                pass
            except KeyboardInterrupt:
                sys.exit(1)
    t.sortby = "Name"
    t.align["Name"] = "l"
    t.align['Description'] = "l"
    t.align['Version'] = "l"
    # t.align['Authors'] = "l"
    print(t)
    sys.exit()

if __name__ == '__main__':
    args = parse_cli()

    show()


