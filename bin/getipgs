#!/usr/bin/env perl

# LIBRARIES and PRAGMAS: start
use FindBin;
use lib "$FindBin::RealBin/../perl/lib";
use File::Which;
use IPC::Run qw(run);
use List::MoreUtils qw(uniq);
use Rotifer;
use Rotifer::DB::NCBI::EUtils qw(get_seqids);
use Scalar::Util qw(looks_like_number);
use strict;
use warnings;
# LIBRARIES and PRAGMAS: end

# Parse configuration/options
my $CONFIG = &parse_configuration();

###############
# MAIN PROGRAM: start

# Locate and check NCBI's edirect commands
my %exe = ();
foreach my $cmd (qw(edirect.pl xtract)) {
    $exe{$cmd} = which($cmd) || die "Could not find executable $cmd!";
}

# Prepare commands
my $efetch_only = [ $exe{"edirect.pl"}, qw(-fetch -format ipg -mode xml -id) ];
my $efetch  = [ $exe{"edirect.pl"}, qw(-fetch -format ipg -mode xml) ];
my $epost   = [ $exe{"edirect.pl"}, qw(-post -format acc -db protein) ];
my @colTemplate = qw(&QACC &SOURCE &PACC CDS@accver CDS@start CDS@stop CDS@strand CDS@taxid CDS@org CDS@strain CDS@kingdom);
my $xtract  = [ $exe{"xtract"}, qw(-pattern IPGReport -pfx \n -QACC IPGReport@product_acc -group Protein -SOURCE Protein@source -PACC Protein@accver -block CDS -def - -element), @colTemplate ];
print STDERR join(" ",@$epost,"|",@$efetch,"|",@$xtract),"\n" if ($CONFIG->debug);

# Prepare input
@ARGV = uniq @ARGV; # Make sure there are no repetitions!
my %map = map { @{$_} } get_seqids(grep { /^\d+$/ } @ARGV);
for (my $i=0; $i<=$#ARGV; $i++) {
    if ($ARGV[$i] =~ /^\d+$/ && exists $map{$ARGV[$i]}) {
	$ARGV[$i] = $map{$ARGV[$i]};
    }
}
my %args = map { ($_,1) } @ARGV;

# Issue commands and monitor progress
my $nlast = 0;
my $attempt = 1;
my $todo = scalar(keys %args);
print join("\t",map { s/^\&//; s/^\S+\@//; lc($_) } @colTemplate),"\n" if ($CONFIG->header);
while ($todo > 0 && $todo != $nlast && $attempt <= $CONFIG->retry) {
    $nlast = $todo;
    my $in = join("\n",grep { exists $args{$_} } @ARGV);

    my ($out,$err);
    print STDERR join(" ","DEBUG: ",@$epost,"< $todo queries | ",@$efetch," | ",@$xtract),"\n" if ($CONFIG->debug);
    run($epost, "<", \$in, "|", $efetch, "|", $xtract, \$out, \$err);
    warn $err if $err;
    unless (defined $out && length $out) {
	warn join("\n","WARNING: No identical protein reports for the sequences below!\nWARNING: Check their status's at NCBI.",$in),"\n";
	last;
    }
    if ($out =~ /Resource temporarily unavailable/ || $err =~ /Resource temporarily unavailable/) {
	sleep(2);
	$attempt++;
	next;
    }

    foreach my $row (split(/\n/,$out)) {
	my @col = split(/\t/,$row);
	delete $args{$col[0]};
	print join("\t",@col),"\n";
    }

    $todo = scalar(keys %args);
}

# MAIN PROGRAM: end
exit 0;

###############
# Subroutines

sub parse_configuration {
    use Application::Config qw(:argcount GetConfig);
    my $appconfig = GetConfig({ EXPAND_ARGV  => 1,
				EXPAND_STDIN => 1,
			      },

			      'retry' => {
				  ALIAS    => 'r',
				  DEFAULT  => 5,
				  ARGCOUNT => ARGCOUNT_ONE,
				  SUMMARY  => "Due to network or Entrez server's instability, the program may fail to retrive information for some GIs in a first attempt. This parameter controls how many times the program should repeat the query to get missing results.",
			      },

			      "header" => {
				  ALIAS    => "y",
				  ARGCOUNT => ARGCOUNT_NONE,
				  DEFAULT  => 1,
				  SUMMARY  => "Add column headers.",
			      });

    return $appconfig;
}

# POD: start
# Documentation (use option -doc or --doc to see it!)
#
# AppConfig::AutoDoc can automatically extract Plain Old Documentation
# from within the caller program's, add descriptions of the options
# created by L<define> and do some pretty formatting for output.
# 
# Note that POD may be added anywhere in your program, thus allowing 
# the documentation for a program to be left side by side with the
# function's definition.

=head1 NAME

 getipgs - download identical proteins from NCBI

=head1 SYNOPSIS

 getipgs sequences.txt > identical.tsv

=head1 DESCRIPTION

This program downloads Identical Protein Reports from the NCBI database.

Identical Protein Reports are, by default, tables containing genomic 
coordinates and annotation on 100% identical (redundant) entries from 
NCBI's protein database.

=head1 AUTHOR

 Robson Francisco de Souza

=cut
# POD: end
